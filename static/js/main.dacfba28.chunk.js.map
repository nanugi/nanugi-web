{"version":3,"sources":["App/style.ts","utils/cookie.ts","utils/browserHistory.ts","App/Routes/AuthRoute.tsx","utils/api.ts","container/sign/index.ts","pages/common.ts","pages/Signup/style.ts","pages/Signup/index.tsx","pages/Login/style.ts","pages/Login/index.tsx","pages/Find/style.ts","pages/Find/index.tsx","pages/EmailVerification/style.ts","pages/EmailVerification/index.tsx","pages/CustomerService/index.tsx","pages/Policy/index.tsx","container/post/index.ts","pages/Main/style.ts","pages/Main/index.tsx","pages/Post/style.ts","pages/Post/index.tsx","pages/PostWrite/style.ts","pages/PostWrite/index.tsx","container/user/store.ts","container/user/index.ts","pages/MyPage/index.tsx","pages/Enpty/style.ts","pages/Enpty/index.tsx","App/Routes/index.tsx","App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyles","createGlobalStyle","name","date","Date","document","cookie","toUTCString","value","day","setTime","getTime","match","createBrowserHistory","basename","process","AuthRoute","component","path","exact","Boolean","callCookie","history","push","defaultProps","errorHandling","response","a","status","callFetch","url","method","body","undefined","jwt","init","headers","JSON","stringify","fetch","toJson","clone","json","text","responseText","Error","callApiBase","serverUrl","indexOf","login","isStaySignedIn","req","callApi","res","success","data","signup","emailVerification","code","sendCertcode","setNewPassword","Page","css","Input","styled","input","Button","button","SignupPage","div","AfterSignupBox","AfterSignupText1","AfterSignupText2","AfterSignupText2Strong","AfterSignupText3","AfterSignupText3Strong","LoginLinkBtn","SingupInfo","SingupInfoStrong","SignupBtn","Signup","useState","email","password","rPassword","signupField","setSignupField","afterSignup","setAfterSignup","changeState","e","target","targetName","onClickSignupBtn","currentTarget","disabled","classList","add","alert","remove","id","msg","style","marginBottom","type","onClick","autoComplete","placeholder","onChange","LoginPage","StaySignedInBox","StaySignedInBtn","StaySignedInLabel","LinkBox","FindLink","LoginBtn","SignupLink","Login","setIsStaySignedIn","loginField","setLoginField","onClickLoginBtn","useEffect","className","FindPage","MainText","LoginLink","Text","Btn","Find","findField","setFindField","afterSendingCode","setAfterSendingCode","afterSetNewPassword","setAfterSetNewPassword","onClickSendCodeBtn","onClickSetNewPasswordBtn","EmailVerificationPage","ContentsBox","Filter","props","opacity","TypingEffectText","h1","SlothVideo","video","texts","TypingEffect","check","callback","time","useRef","ref","handleRef","clearTimeout","current","typeWriter","char","length","charAt","innerHTML","setTimeout","BackgroundGif","loop","autoPlay","muted","playsInline","src","EmailVerification","btnVisible","setBtnVisible","afterVerification","setAfterVerification","useParams","useMemo","replace","CustomerServicePage","Container","maxWidth","Typography","variant","Divider","Box","TextField","multiline","rows","fullWidth","color","confirm","PolicyPage","getPosts","page","getPost","createPost","MainPage","PostUl","ul","PostLi","li","PostBox","PostImage","PostInfo","PostTitle","PostTag","PostInfoKeyValueBox","PostInfoKey","Main","posts","setPosts","currentPageInfo","setCurrentPageInfo","nextPage","useCallback","next","alreadyImportedPosts_id","map","post","post_id","newPosts","filter","includes","onScroll","offsetHeight","scrollHeight","scrollTop","pathname","state","propsPost","title","minParti","maxParti","price","PostPage","PostInfoBox","PostContent","Post","location","stringId","setPost","Number","content","PostWritePage","CancelBtn","PostWriteBox","InputImage","InputBox","WriteBtn","PostWrite","totalPrice","nanumPrice","chatUrl","postField","setPostField","onClickWriteBtn","height","userStore","profile","makeAutoObservable","this","fetchProfile","MyPage","observer","useHistory","then","p","Grid","container","spacing","alignItems","item","Avatar","uid","aria-colcount","justify","align","ListItem","ListItemIcon","ListItemText","primary","EnptyPage","ErrorCodeText","HmmText","Empty","Routes","staySignedIn","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"0bAEO,IAAMA,EAAeC,YAAH,K,SCFV,EACL,SAACC,GACP,IAAMC,EAAO,IAAIC,KACjBC,SAASC,OAAT,UAAqBJ,EAArB,sBAAuCC,EAAKI,cAA5C,YAHW,EAKR,SAACL,GAAiD,IAAnCM,EAAkC,uDAA1B,OAAQC,EAAkB,uDAAZ,EAClCN,EAAO,IAAIC,KACjBD,EAAKO,QAAQP,EAAKQ,UAAkB,GAANF,EAAW,GAAK,GAAK,KACnDJ,SAASC,OAAT,UAAqBJ,EAArB,YAA6BM,EAA7B,oBAA8CL,EAAKI,cAAnD,YARW,EAUR,SAACL,GACJ,IAAMM,EAAQH,SAASC,OAAOM,MAAhB,iBAAgCV,EAAhC,kBAEd,OAAOM,EAAQA,EAAM,GAAK,I,QCXfK,cAAqB,CAClCC,SAAUC,gBCYNC,EAAY,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAKpC,OAJgBC,QAAQC,EAAe,SAEzBC,EAAQC,KAAK,UAEpB,cAAC,IAAD,CAAOL,KAAMA,EAAMC,MAAOA,EAAOF,UAAWA,KAGrDD,EAAUQ,aAAe,CAAEL,OAAO,GAEnBH,Q,gDCdTS,EAAa,uCAAG,WAAgBC,GAAhB,SAAAC,EAAA,yDAGL,MAFID,EAAXE,OADY,uBAIlBP,EAAkB,OAClBC,EAAQC,KAAK,UALK,mBAMX,GANW,iCASb,GATa,2CAAH,sDAWbM,EAAY,SAChBC,EACAC,GAEoB,IADpBC,EACmB,4DADGC,EAEhBC,EAAMb,EAAe,OAErBc,EAAoB,CACxBC,QAAS,CACP,eAAgB,mBAChB,eAAgBF,GAAO,IAEzBH,SACAC,KAAiB,QAAXD,EAAmBM,KAAKC,UAAUN,QAAQC,GAElD,OAAOM,MAAMT,EAAKK,IAEdK,EAAM,uCAAG,WACbd,GADa,iBAAAC,EAAA,+EAKED,EAASe,QAAQC,OALnB,OAKXV,EALW,wEAOgBN,EAASiB,OAPzB,cAOLC,EAPK,OAQL,IAAIC,MAAJ,qCAAwCD,IARnC,iCAWNZ,GAXM,yDAAH,sDAaNc,EAAW,uCAAG,WAClBhB,EACAC,GAFkB,+BAAAJ,EAAA,6DAGlBK,EAHkB,oCAGIC,EAElBc,EAAYhC,6BAEgB,IAA5Be,EAAIkB,QAAQ,aAAkD,IAA7BlB,EAAIkB,QAAQ,cAC/CD,EAAY,IARI,SAUelB,EAAS,UACrCkB,GADqC,OACzBjB,GACfC,EACAC,GAbgB,cAUZN,EAVY,gBAgBDD,EAAcC,GAhBb,4DAiBHc,EAAUd,IAjBP,sCAoBXO,GApBW,4CAAH,wDAuBF,EACR,SAAOH,GAAP,OACHgB,EAAkBhB,EAAK,QAFZ,EAGP,SACJA,EACAE,GAFI,OAIJc,EAAkBhB,EAAK,OAAQE,ICvEtBiB,EAAK,uCAAG,WAAgBC,EAAyBC,GAAzC,eAAAxB,EAAA,sEACDyB,EAAiC,SAAUD,GAD1C,cAEnB,QADME,EADa,cAEnB,IAAIA,OAAJ,EAAIA,EAAKC,WACHJ,GAAgB7B,EAAe,eAAgBgC,EAAIE,KAAM,KAC7DlC,EAAe,MAAOgC,EAAIE,KAAM,IAJf,kBAOZF,GAPY,2CAAH,wDAmBLG,EAAM,uCAAG,WAAgBL,GAAhB,eAAAxB,EAAA,sEACFyB,EAAmC,SAAUD,GAD3C,cACdE,EADc,yBAEbA,GAFa,2CAAH,sDAMNI,EAAiB,uCAAG,WAAOC,GAAP,eAAA/B,EAAA,sEACbyB,EAAA,kCAA+CM,IADlC,cACzBL,EADyB,yBAExBA,GAFwB,2CAAH,sDASjBM,EAAY,uCAAG,WAAOR,GAAP,eAAAxB,EAAA,sEACRyB,EAAkC,gBAAiBD,GAD3C,cACpBE,EADoB,yBAEnBA,GAFmB,2CAAH,sDAUZO,EAAc,uCAAG,WAAOT,GAAP,eAAAxB,EAAA,sEACVyB,EAChB,mBACAD,GAH0B,cACtBE,EADsB,yBAKrBA,GALqB,2CAAH,sD,mwBCrDpB,IAAMQ,EAAOC,YAAH,KAOJC,EAAQC,IAAOC,MAAV,KAsBLC,EAASF,IAAOG,OAAV,K,00CC3BZ,IAAMC,GAAaJ,IAAOK,IAAV,IACnBR,GAKSS,GAAiBN,IAAOK,IAAV,KAKdE,GAAmBP,IAAOK,IAAV,KAKhBG,GAAmBR,IAAOK,IAAV,KAGhBI,GAAyBT,IAAOK,IAAV,KAQtBK,GAAmBV,IAAOK,IAAV,KAIhBM,GAAyBX,IAAOK,IAAV,KAKtBO,GAAeZ,YAAOE,EAAPF,CAAH,KAKZa,GAAab,IAAOK,IAAV,KAGVS,GAAmBd,IAAOK,IAAV,KAQhBU,GAAYf,YAAOE,EAAPF,CAAH,KCoGPgB,OAvIf,WAAmB,IAAD,EACsBC,mBAAS,CAC7CC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXlF,KAAM,KALQ,mBACTmF,EADS,KACIC,EADJ,OAOsBL,oBAAS,GAP/B,mBAOTM,EAPS,KAOIC,EAPJ,KASRN,EAAqCG,EAArCH,MAAOC,EAA8BE,EAA9BF,SAAUC,EAAoBC,EAApBD,UAAWlF,EAASmF,EAATnF,KAE9BuF,EAAc,SAACC,GAA4C,IAAD,EAC1BA,EAAEC,OAAxBC,EADgD,EACtD1F,KAAkBM,EADoC,EACpCA,MAE1B8E,EAAe,2BACVD,GADS,kBAEXO,EAAapF,MAIZqF,EAAgB,uCAAG,WACvBH,GADuB,iBAAA/D,EAAA,0DAGjBgE,EAASD,EAAEI,eACVC,UAAW,EAClBJ,EAAOK,UAAUC,IAAI,MAEjBd,IAAaC,EAPM,uBAQrBc,MAAM,0EACNP,EAAOI,UAAW,EAClBJ,EAAOK,UAAUG,OAAO,MAVH,2CAcL3C,EAAO,CACvB4C,GAAIlB,EACJC,WACAjF,SAjBqB,YAoBF,KAAd,QANDmD,EAdiB,cAoBhB,IAAHA,OAAA,EAAAA,EAAKC,SApBc,wBAqBrB4C,MAAK,OAAC7C,QAAD,IAACA,OAAD,EAACA,EAAKgD,KAEXf,EAAe,CACbJ,MAAO,GACPC,SAAU,GACVC,UAAW,GACXlF,KAAM,KAERyF,EAAOI,UAAW,EAClBJ,EAAOK,UAAUG,OAAO,MA9BH,2BAuCvBX,GAAe,GAvCQ,4CAAH,sDA0CtB,OACE,cAACpB,GAAD,UACGmB,EACC,eAACjB,GAAD,WACE,cAACC,GAAD,6CACA,cAACA,GAAD,CAAkB+B,MAAO,CAAEC,aAAc,QAAzC,+DAGA,eAAC/B,GAAD,WACE,eAACC,GAAD,oBAA0BS,EAA1B,YADF,YAGA,cAACV,GAAD,CAAkB8B,MAAO,CAAEC,aAAc,QAAzC,kFAGA,cAAC7B,GAAD,8EACA,eAACA,GAAD,CAAkB4B,MAAO,CAAEC,aAAc,QAAzC,kDACU,IACR,cAAC5B,GAAD,uEAFF,4CAOA,cAACC,GAAD,CAAc4B,KAAK,SAASC,QAAS,kBAAMnF,EAAQC,KAAK,WAAxD,2DAKF,qCACE,cAACsD,GAAD,uCACA,eAACA,GAAD,WACE,cAACC,GAAD,8CADF,kBAGA,cAACD,GAAD,CAAYyB,MAAO,CAAEC,aAAc,QAAnC,gEAIA,cAACxC,EAAD,CACE2C,aAAa,MACbxG,KAAK,QACLyG,YAAY,qBACZnG,MAAO0E,EACP0B,SAAUnB,IAEZ,cAAC1B,EAAD,CACE7D,KAAK,WACLyG,YAAY,2BACZH,KAAK,WACLhG,MAAO2E,EACPyB,SAAUnB,IAEZ,cAAC1B,EAAD,CACE7D,KAAK,YACLyG,YAAY,wCACZH,KAAK,WACLhG,MAAO4E,EACPwB,SAAUnB,IAEZ,cAAC1B,EAAD,CACE2C,aAAa,MACbxG,KAAK,OACLyG,YAAY,eACZnG,MAAON,EACP0G,SAAUnB,IAEZ,cAACV,GAAD,CAAWyB,KAAK,SAASC,QAASZ,EAAlC,4C,60CC/IH,IAAMgB,GAAY7C,IAAOK,IAAV,KAClBR,GAGSiD,GAAkB9C,IAAOK,IAAV,MAMf0C,GAAkB/C,IAAOG,OAAV,MA2Bf6C,GAAoBhD,IAAOK,IAAV,MAIjB4C,GAAUjD,IAAOK,IAAV,MAUP6C,GAAWlD,IAAOK,IAAV,MASR8C,GAAWnD,YAAOE,EAAPF,CAAH,MAIRoD,GAAapD,YAAOE,EAAPF,CAAH,MCuCRqD,OAxFf,WAAkB,IAAD,EAC6BpC,oBAAS,GADtC,mBACR/B,EADQ,KACQoE,EADR,OAEqBrC,mBAAS,CAC3CC,MAAO,GACPC,SAAU,KAJG,mBAERoC,EAFQ,KAEIC,EAFJ,KAOPtC,EAAoBqC,EAApBrC,MAAOC,EAAaoC,EAAbpC,SAETM,EAAc,SAACC,GAA4C,IAAD,EACtCA,EAAEC,OAAlBzF,EADsD,EACtDA,KAAMM,EADgD,EAChDA,MAEdgH,EAAc,2BACTD,GADQ,kBAEVrH,EAAOM,MAINiH,EAAe,uCAAG,WACtB/B,GADsB,iBAAA/D,EAAA,6DAGhBgE,EAASD,EAAEI,eACVC,UAAW,EAClBJ,EAAOK,UAAUC,IAAI,MALC,SAOJhD,EAAMC,EAAgB,CAAEkD,GAAIlB,EAAOC,aAP/B,UAOhB9B,EAPgB,OAQtBmE,EAAc,CACZtC,MAAO,GACPC,SAAU,KAEZQ,EAAOI,UAAW,EAClBJ,EAAOK,UAAUG,OAAO,OAEH,KAAd,OAAH9C,QAAG,IAAHA,OAAA,EAAAA,EAAKC,SAfa,wBAgBpB4C,MAAM7C,EAAIgD,KAhBU,2BAoBtB/E,EAAQC,KAAK,SApBS,4CAAH,sDA4BrB,OALAmG,qBAAU,WACRrG,EAAkB,gBAClBA,EAAkB,SACjB,IAGD,eAACwF,GAAD,WACE,cAAC9C,EAAD,CACE7D,KAAK,QACLyG,YAAY,qBACZnG,MAAO0E,EACP0B,SAAUnB,IAEZ,cAAC1B,EAAD,CACE7D,KAAK,WACLyG,YAAY,2BACZH,KAAK,WACLhG,MAAO2E,EACPyB,SAAUnB,IAGZ,cAAC0B,GAAD,CAAUX,KAAK,SAASC,QAASgB,EAAjC,gCAIA,cAACL,GAAD,CAAYZ,KAAK,SAASC,QAAS,kBAAMnF,EAAQC,KAAK,YAAtD,sCAIA,eAAC0F,GAAD,WACE,eAACH,GAAD,CACEL,QAAS,WACPa,GAAmBpE,IAFvB,UAKE,cAAC6D,GAAD,CAAiBP,KAAK,SAASmB,UAAWzE,EAAiB,KAAO,GAAlE,oBAGA,cAAC8D,GAAD,8DAGF,cAACE,GAAD,CAAUT,QAAS,kBAAMnF,EAAQC,KAAK,UAAtC,0D,i8BCjGD,IAAMqG,GAAW5D,IAAOK,IAAV,KACjBR,GAESgE,GAAW7D,IAAOK,IAAV,MAQR4C,GAAUjD,IAAOK,IAAV,MAMPyD,GAAY9D,IAAOK,IAAV,MAOT+C,GAAapD,IAAOK,IAAV,MASV0D,GAAO/D,IAAOK,IAAV,MAOJ2D,GAAMhE,YAAOE,EAAPF,CAAH,MC2HDiE,OAxJf,WAAiB,IAAD,EACoBhD,mBAAS,CACzCC,MAAO,GACPxB,KAAM,GACNyB,SAAU,GACVC,UAAW,KALC,mBACP8C,EADO,KACIC,EADJ,OAOkClD,oBAAS,GAP3C,mBAOPmD,EAPO,KAOWC,EAPX,OAQwCpD,oBAAS,GARjD,mBAQPqD,EARO,KAQcC,EARd,KAUNrD,EAAqCgD,EAArChD,MAAOxB,EAA8BwE,EAA9BxE,KAAMyB,EAAwB+C,EAAxB/C,SAAUC,EAAc8C,EAAd9C,UAEzBK,EAAc,SAACC,GAA4C,IAAD,EACtCA,EAAEC,OAAlBzF,EADsD,EACtDA,KAAMM,EADgD,EAChDA,MAEd2H,EAAa,2BACRD,GADO,kBAEThI,EAAOM,MAINgI,EAAkB,uCAAG,WACzB9C,GADyB,iBAAA/D,EAAA,6DAGnBgE,EAASD,EAAEI,eACVC,UAAW,EAClBJ,EAAOK,UAAUC,IAAI,MALI,SAOPtC,EAAa,CAAEuB,UAPR,UAOnB7B,EAPmB,OASzBsC,EAAOI,UAAW,EAClBJ,EAAOK,UAAUG,OAAO,OAEH,KAAd,OAAH9C,QAAG,IAAHA,OAAA,EAAAA,EAAKC,SAZgB,wBAavB4C,MAAM7C,EAAIgD,KAEV8B,EAAa,CACXjD,MAAO,GACPxB,KAAM,GACNyB,SAAU,GACVC,UAAW,KAnBU,2BAwBzBiD,GAAoB,GAxBK,4CAAH,sDA2BlBI,EAAwB,uCAAG,WAC/B/C,GAD+B,iBAAA/D,EAAA,0DAGzBgE,EAASD,EAAEI,eACVC,UAAW,EAClBJ,EAAOK,UAAUC,IAAI,MAEjBd,IAAaC,EAPc,uBAQ7Bc,MAAM,0EACNP,EAAOI,UAAW,EAClBJ,EAAOK,UAAUG,OAAO,MAVK,2CAcbvC,EAAe,CAAEF,OAAMyB,aAdV,WAczB9B,EAdyB,OAgB/B8E,EAAa,CACXjD,MAAO,GACPxB,KAAM,GACNyB,SAAU,GACVC,UAAW,KAEbO,EAAOI,UAAW,EAClBJ,EAAOK,UAAUG,OAAO,OAEH,KAAd,OAAH9C,QAAG,IAAHA,OAAA,EAAAA,EAAKC,SAzBsB,wBA0B7B4C,MAAM7C,EAAIgD,KA1BmB,2BA8B/BkC,GAAuB,GA9BQ,4CAAH,sDAiC9B,OACE,eAACX,GAAD,WACE,cAACC,GAAD,oDACA,mCACGS,EACC,qCACE,cAACP,GAAD,yFACA,cAACC,GAAD,CAAKxB,KAAK,SAASC,QAAS,kBAAMnF,EAAQC,KAAK,WAA/C,4DAKF,mCACG6G,EACC,qCACE,cAACrE,EAAD,CACE2C,aAAa,MACbxG,KAAK,OACLyG,YAAY,4BACZnG,MAAOkD,EACPkD,SAAUnB,IAEZ,cAAC1B,EAAD,CACE7D,KAAK,WACLyG,YAAY,2BACZH,KAAK,WACLhG,MAAO2E,EACPyB,SAAUnB,IAEZ,cAAC1B,EAAD,CACE7D,KAAK,YACLyG,YAAY,wCACZH,KAAK,WACLhG,MAAO4E,EACPwB,SAAUnB,IAGZ,cAACuC,GAAD,CAAKxB,KAAK,SAASC,QAASgC,EAA5B,4DAKF,qCACE,cAAC1E,EAAD,CACE7D,KAAK,QACLyG,YAAY,qBACZnG,MAAO0E,EACP0B,SAAUnB,IAGZ,cAACuC,GAAD,CAAKxB,KAAK,SAASC,QAAS+B,EAA5B,mDAIA,eAAC,GAAD,WACE,cAACV,GAAD,CAAWrB,QAAS,kBAAMnF,EAAQC,KAAK,WAAvC,gCAGA,cAAC,GAAD,CAAYkF,QAAS,kBAAMnF,EAAQC,KAAK,YAAxC,oD,slCCxJX,IAAMmH,GAAwB1E,IAAOK,IAAV,MAOrBsE,GAAc3E,IAAOK,IAAV,MAcXuE,GAAS5E,IAAOK,IAAV,MAQG,SAACwE,GAAD,8BAA4BA,EAAMC,QAAlC,QAITC,GAAmB/E,IAAOgF,GAAV,MAMhBC,GAAajF,IAAOkF,MAAV,MAUVlB,GAAMhE,IAAOK,IAAV,MCrCV8E,GAAQ,CAAC,kBAAS,sCAMlBC,GAAe,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SACvBC,EAAOC,iBAAO,GACdC,EAAMD,iBAAO,IACbE,EAAYF,iBAAO,IA4CzB,OAxCA9B,qBAAU,WAIRiC,aAAaD,EAAUE,UAEJ,SAAbC,IAGJ,IAKIC,EAAO,GACX,OALIX,GAAM,GAAGY,OAASR,EAAKK,QAAgB,EACjCP,EACE,EADY,GAKtB,KAAK,EACHS,EAAOX,GAAM,GAAGa,OAAOT,EAAKK,SAC5BL,EAAKK,SAAW,EAChB,MACF,KAAK,EACHE,EApBU,IAqBV,MACF,KAAK,EACHA,EAAOX,GAAM,GAAGa,OAAOT,EAAKK,QAAUT,GAAM,GAAGY,QAC/CR,EAAKK,SAAW,EAOpBH,EAAIG,QAAQK,WAAaH,EACrBP,EAAKK,SAAWT,GAAM,GAAGY,OAASZ,GAAM,GAAGY,OAC7CL,EAAUE,QAAUM,WAAWL,EAhCrB,KAiCPP,IAEPO,KACC,CAACR,EAAOC,IAGT,cAACP,GAAD,CAAkBU,IAAKA,KAIrBU,GAAgB,kBACpB,eAAClB,GAAD,CAAYmB,MAAI,EAACC,UAAQ,EAACC,OAAK,EAACC,aAAW,EAA3C,UACE,wBACEC,IAAI,iEACJhE,KAAK,eAEP,wBACEgE,IAAI,gEACJhE,KAAK,kBAqDIiE,GAhDW,WAAO,IAAD,EACMxF,oBAAS,GADf,mBACvByF,EADuB,KACXC,EADW,OAEoB1F,oBAAS,GAF7B,mBAEvB2F,EAFuB,KAEJC,EAFI,KAGtBnH,EAASoH,cAATpH,KAEFvB,EAAO4I,mBACX,wCACE,4BAAApJ,EAAA,sEACoB8B,EAAkBC,GADtC,QAEE,QADML,EADR,cAEE,IAAIA,OAAJ,EAAIA,EAAKC,WAGP6F,GAAM,GAAK,oDAFX0B,GAAqB,GAHzB,6CASF,CAACnH,IAOH,OAJAgE,qBAAU,WACRvF,MACC,CAACA,IAGF,mCACE,eAACuG,GAAD,WACE,eAACC,GAAD,WACE,cAAC,GAAD,CACEU,MAAOuB,EACPtB,SAAU,WACRqB,GAAc,MAGjBD,EACC,cAAC,GAAD,CAAKjE,QAAS,kBAAMnF,EAAQ0J,QAAQ,MAApC,yDAEA,gCAIJ,cAAC,GAAD,IAEA,cAACpC,GAAD,CAAQE,QAAS4B,EAAa,GAAM,W,2DC1F7BO,OAlCf,WACE,OACE,eAACC,GAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACC,GAAA,EAAD,CAAYC,QAAQ,KAApB,sCAGA,cAACD,GAAA,EAAD,CAAYC,QAAQ,YAApB,sGAGA,cAACC,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,WAAS,EACTC,KAAM,EACN/E,YAAY,wEACZgF,WAAS,EACTN,QAAQ,aAEV,cAAC,KAAD,CACEA,QAAQ,YACRO,MAAM,UACNnF,QAAS,WACHoF,QAAQ,uFAJhB,uCCROC,OAVf,WACE,OACE,cAACZ,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACC,GAAA,EAAD,CAAYC,QAAQ,KAApB,4D,SCsBOU,GAAQ,uCAAG,WAAgBC,GAAhB,eAAArK,EAAA,sEACJyB,EAAA,qBAA2C4I,IADvC,cAChB3I,EADgB,yBAEfA,GAFe,2CAAH,sDAUR4I,GAAO,uCAAG,WAAgB7F,GAAhB,eAAAzE,EAAA,sEACHyB,EAAA,gBAAqCgD,IADlC,cACf/C,EADe,yBAEdA,GAFc,2CAAH,sDAkBP6I,GAAU,uCAAG,WAAgB/I,GAAhB,eAAAxB,EAAA,sEACNyB,EAAA,QAAoDD,GAD9C,cAClBE,EADkB,yBAEjBA,GAFiB,2CAAH,sD,knDCpDhB,IAAM8I,GAAWnI,IAAOK,IAAV,KACjBR,GAGSuI,GAASpI,IAAOqI,GAAV,MA+BNC,GAAStI,IAAOuI,GAAV,MAQNC,GAAUxI,IAAOK,IAAV,MAKPoI,GAAYzI,IAAOK,IAAV,MAWlB,SAACwE,GAAD,OACAA,EAAM/G,IAAN,gCAC6B+G,EAAM/G,IADnC,4EAKS4K,GAAW1I,IAAOK,IAAV,MAERsI,GAAY3I,IAAOK,IAAV,MAMTuI,GAAU5I,IAAOK,IAAV,MAOPwI,GAAsB7I,IAAOK,IAAV,MAMnByI,GAAc9I,IAAOK,IAAV,MCWT0I,OAnFf,WAAiB,IAAD,EACY9H,mBAAqB,IADjC,mBACP+H,EADO,KACAC,EADA,OAEgChI,qBAFhC,mBAEPiI,EAFO,KAEUC,EAFV,KAIRC,EAAWC,sBAAW,sBAAC,gCAAA1L,EAAA,gEACtBuL,QADsB,IACtBA,OADsB,EACtBA,EAAiB3J,KAAK+J,KADA,iEAKTvB,GAASmB,EAAgB3J,KAAKyI,KAAO,GAL5B,QAM3B,QADM3I,EALqB,cAM3B,IAAIA,OAAJ,EAAIA,EAAKC,WACDiK,EAA0BL,EAAgB3J,KAAKyJ,MAAMQ,KACzD,SAACC,GAAD,OAAUA,EAAKC,WAEXC,EAAWtK,EAAIE,KAAKyJ,MAAMY,QAC9B,SAACH,GAAD,OAAWF,EAAwBM,SAASJ,EAAKC,YAGnDT,EAAS,GAAD,oBAAKD,GAAL,aAAeW,KACvBR,EAAmB,CAAE5J,KAAMF,EAAIE,QAfN,2CAiB1B,CAAC2J,EAAiBF,IAarB,OAXAtF,qBAAU,WAAM,4CACd,4BAAA/F,EAAA,sEACoBoK,GAAS,GAD7B,QAEE,QADM1I,EADR,cAEE,IAAIA,OAAJ,EAAIA,EAAKC,WACP2J,EAAS5J,EAAIE,KAAKyJ,OAClBG,EAAmB,CAAE5J,KAAMF,EAAIE,QAJnC,4CADc,uBAAC,WAAD,wBAQdpB,KACC,IAGD,cAACgK,GAAD,CACE2B,SAAU,SAACpI,GAA+C,IAAD,EACLA,EAAEI,cAA5CiI,EAD+C,EAC/CA,aAAcC,EADiC,EACjCA,aAClBD,EAFmD,EACnBE,WACJD,GAC9BZ,KAJN,SAQE,cAAChB,GAAD,CAAQzE,UAAU,QAAlB,SACGqF,EAAMQ,KAAI,SAACC,GAAD,OACT,cAACnB,GAAD,UACE,eAACE,GAAD,WACE,cAACC,GAAD,CACEhG,QAAS,WACPnF,EAAQC,KAAK,CACX2M,SAAS,SAAD,OAAWT,EAAKC,SACxBS,MAAO,CAAEC,UAAWX,QAI1B,eAACf,GAAD,WACE,cAACC,GAAD,CACElG,QAAS,WACPnF,EAAQC,KAAK,CACX2M,SAAS,SAAD,OAAWT,EAAKC,SACxBS,MAAO,CAAEC,UAAWX,MAJ1B,SAQGA,EAAKY,QAER,cAACzB,GAAD,2EACA,eAACC,GAAD,WACE,cAACC,GAAD,wCADF,IACoCW,EAAKa,SADzC,KACqD,IAClDb,EAAKc,SAFR,YAIA,eAAC1B,GAAD,WACE,cAACC,GAAD,8CADF,IACqCW,EAAKe,MAD1C,mBA1BOf,EAAKC,iB,i0CC3DrB,IAAMe,GAAWzK,IAAOK,IAAV,MAERoI,GAAYzI,IAAOK,IAAV,MAQlB,SAACwE,GAAD,OACAA,EAAM/G,IAAN,gCAC6B+G,EAAM/G,IADnC,uFAKS4M,GAAc1K,IAAOK,IAAV,MAOXqI,GAAW1I,IAAOK,IAAV,MAORsI,GAAY3I,IAAOK,IAAV,MAITuI,GAAU5I,IAAOK,IAAV,MAKPwI,GAAsB7I,IAAOK,IAAV,MAInByI,GAAc9I,IAAOK,IAAV,MAMX2D,GAAMhE,YAAOE,EAAPF,CAAH,MAOH2K,GAAc3K,IAAOK,IAAV,MC1CxB,SAASuK,GAAT,GAE2D,IAAD,EAClDR,EAAS,UADyC,EADxDS,SAE2BV,aAAZ,aAAG,EAAgBC,UACtBU,EAAahE,cAAjB1E,GAFgD,EAKhCnB,mBAASmJ,GALuB,mBAKjDX,EALiD,KAK3CsB,EAL2C,KAoBxD,OAbArH,qBAAU,WAER,IAAMtB,EAAK4I,OAAOF,GACZ3M,EAAI,uCAAG,4BAAAR,EAAA,sEACOsK,GAAQ7F,GADf,QAEX,QADM/C,EADK,cAEX,IAAIA,OAAJ,EAAIA,EAAKC,UAASyL,EAAQ1L,EAAIE,MAFnB,2CAAH,qDAKLkK,GAAQA,EAAKC,UAAYtH,GAAIjE,MACjC,CAACsL,EAAMqB,IAKR,cAACL,GAAD,UACGhB,EACC,qCACE,cAAC,GAAD,IACA,eAACiB,GAAD,WACE,eAAC,GAAD,WACE,gCACE,cAAC,GAAD,CAAWpI,MAAO,CAAEC,aAAc,OAAlC,SACGkH,EAAKY,QAER,cAAC,GAAD,8EAEF,gCACE,eAAC,GAAD,CAAqB/H,MAAO,CAAEC,aAAc,OAA5C,UACE,cAAC,GAAD,wCADF,IACoCkH,EAAKa,SADzC,KACqD,IAClDb,EAAKc,SAFR,YAIA,eAAC,GAAD,WACE,cAAC,GAAD,8CADF,IACqCd,EAAKe,MAD1C,kBAKJ,cAAC,GAAD,6DAEF,cAACG,GAAD,UAAclB,EAAKwB,aAGrB,2FAKRL,GAAKpN,aAAe,CAAE4M,eAAWnM,GAElB2M,U,msECvER,IAAMM,GAAgBlL,IAAOK,IAAV,KACtBR,GAUSsL,GAAYnL,IAAOK,IAAV,MA+BT+K,GAAepL,IAAOK,IAAV,MAYZqK,GAAc1K,IAAOK,IAAV,MAQXgL,GAAarL,IAAOK,IAAV,MAYnB,SAACwE,GAAD,OACAA,EAAM/G,IAAN,gCAC6B+G,EAAM/G,IADnC,8DAKSwN,GAAWtL,IAAOK,IAAV,MAQRN,GAAQC,IAAOC,MAAV,MAoBLsL,GAAWvL,IAAOG,OAAV,MCiCNqL,OAjIf,WAAsB,IAAD,EACevK,mBAAS,CACzCoJ,MAAO,GACPY,QAAS,GACTQ,WAAY,GACZC,WAAY,GACZpB,SAAU,GACVC,SAAU,GACVoB,QAAS,KARQ,mBACZC,EADY,KACDC,EADC,KAYjBxB,EAOEuB,EAPFvB,MACAY,EAMEW,EANFX,QACAQ,EAKEG,EALFH,WACAC,EAIEE,EAJFF,WACApB,EAGEsB,EAHFtB,SACAC,EAEEqB,EAFFrB,SACAoB,EACEC,EADFD,QAGIlK,EAAc,SAACC,GAA4C,IAAD,EACtCA,EAAEC,OAAlBzF,EADsD,EACtDA,KAAMM,EADgD,EAChDA,MAEdqP,EAAa,2BACRD,GADO,kBAET1P,EAAOM,MAINsP,EAAe,uCAAG,WACtBpK,GADsB,iBAAA/D,EAAA,6DAGhBgE,EAASD,EAAEI,eACVC,UAAW,EAClBJ,EAAOK,UAAUC,IAAI,MALC,SAOJiG,GAAW,CAC3BmC,QACAY,UACAQ,WAAYT,OAAOS,GACnBC,WAAYV,OAAOU,GACnBpB,SAAUU,OAAOV,GACjBC,SAAUS,OAAOT,GACjBoB,YAdoB,WAiBD,KAAd,QAVDtM,EAPgB,cAiBf,IAAHA,OAAA,EAAAA,EAAKC,SAjBa,uBAkBpB4C,MAAM7C,EAAIgD,KAlBU,0BAsBtBwJ,EAAa,CACXxB,MAAO,GACPY,QAAS,GACTQ,WAAY,GACZC,WAAY,GACZpB,SAAU,GACVC,SAAU,GACVoB,QAAS,KAGXhK,EAAOI,UAAW,EAClBJ,EAAOK,UAAUG,OAAO,MAExBD,MAAK,OAAC7C,QAAD,IAACA,OAAD,EAACA,EAAKgD,KACX/E,EAAQC,KAAK,SApCS,4CAAH,sDAuCrB,OACE,cAAC2N,GAAD,UACE,eAACE,GAAD,WACE,cAACD,GAAD,CAAW1I,QAAS,kBAAMnF,EAAQC,KAAK,UAAvC,sCACA,eAAC,GAAD,WACE,cAAC8N,GAAD,CAAY5I,QAAS,kBAAMP,MAAM,QAAjC,mDACA,eAACoJ,GAAD,WACE,cAAC,GAAD,CACEpP,KAAK,QACLyG,YAAY,eACZnG,MAAO6N,EACPzH,SAAUnB,IAEZ,cAAC,GAAD,CACEvF,KAAK,UACLyG,YAAY,eACZnG,MAAOyO,EACPrI,SAAUnB,EACVa,MAAO,CAAEyJ,OAAQ,UAEnB,cAAC,GAAD,CACE7P,KAAK,aACLyG,YAAY,sBACZnG,MAAOiP,EACP7I,SAAUnB,IAEZ,cAAC,GAAD,CACEvF,KAAK,aACLyG,YAAY,qBACZnG,MAAOkP,EACP9I,SAAUnB,IAEZ,cAAC,GAAD,CACEvF,KAAK,WACLyG,YAAY,2BACZnG,MAAO8N,EACP1H,SAAUnB,IAEZ,cAAC,GAAD,CACEvF,KAAK,WACLyG,YAAY,2BACZnG,MAAO+N,EACP3H,SAAUnB,IAEZ,cAAC,GAAD,CACEvF,KAAK,UACLyG,YAAY,kCACZnG,MAAOmP,EACP/I,SAAUnB,UAIhB,cAAC8J,GAAD,CAAU/I,KAAK,SAASC,QAASqJ,EAAjC,mD,yNC7HKE,GAAY,IANrB,aAAe,0BAFfC,QAAuB,KAGnBC,aAAmBC,OCIdC,GAAY,uCAAG,4BAAAzO,EAAA,sEACNyB,EAA+B,YADzB,cAClBC,EADkB,yBAEjBA,GAFiB,2CAAH,qDC6HVgN,GAjHAC,cAAS,WAAO,IAAD,cACtBhP,EAAUiP,cAQhB,OANA7I,qBAAU,WACR0I,KAAeI,MAAK,SAACC,GAAO,IAAD,EACzBT,GAAUC,QAAV,iBAAoBQ,QAApB,IAAoBA,OAApB,EAAoBA,EAAGlN,YAAvB,QAA+B,UAEhC,IAGD,eAAC2H,GAAA,EAAD,CAAWC,SAAS,KAApB,UACE,eAACuF,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,SAAvC,UACE,cAACH,GAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,GAAA,EAAD,8BAASf,GAAUC,eAAnB,iBAAS,EAAmB/P,YAA5B,aAAS,EAA0B,UAAnC,QAAyC,QAE3C,eAACwQ,GAAA,EAAD,CAAMI,MAAI,EAAV,UACE,cAAC1F,GAAA,EAAD,CAAYC,QAAQ,KAApB,6BACG2E,GAAUC,eADb,aACG,EAAmBe,WADtB,QAC6B,iCAE7B,eAAC5F,GAAA,EAAD,CAAYC,QAAQ,YAApB,8BACG2E,GAAUC,eADb,aACG,EAAmB/P,YADtB,QAC8B,+BAD9B,kDAKJ,eAACwQ,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGK,gBAAe,EAAGC,QAAQ,SAAtD,UACE,eAACR,GAAA,EAAD,CAAMI,MAAI,EAACI,QAAQ,SAAnB,UACE,cAACH,GAAA,EAAD,gBAGA,cAAC3F,GAAA,EAAD,CAAYC,QAAQ,YAApB,0CAEF,eAACqF,GAAA,EAAD,CAAMI,MAAI,EAACI,QAAQ,SAAnB,UACE,cAACH,GAAA,EAAD,gBAGA,cAAC3F,GAAA,EAAD,CAAYC,QAAQ,YAApB,0CAEF,eAACqF,GAAA,EAAD,CAAMI,MAAI,EAACI,QAAQ,SAAnB,UACE,cAACH,GAAA,EAAD,gBAGA,cAAC3F,GAAA,EAAD,CAAYC,QAAQ,YAAY8F,MAAM,SAAtC,6CAGJ,cAAC7F,GAAA,EAAD,IACA,eAAC8F,GAAA,EAAD,CAAUjN,QAAM,EAAhB,UACE,cAACkN,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,wCAExB,eAACH,GAAA,EAAD,CAAUjN,QAAM,EAAhB,UACE,cAACkN,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,uCAExB,cAACjG,GAAA,EAAD,IACA,eAAC8F,GAAA,EAAD,CACEjN,QAAM,EACNsC,QAAS,kBAAMnF,EAAQC,KAAK,cAF9B,UAIE,cAAC8P,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,gCAExB,eAACH,GAAA,EAAD,CAAUjN,QAAM,EAAhB,UACE,cAACkN,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,8CAExB,eAACH,GAAA,EAAD,CACEjN,QAAM,EACNsC,QAAS,kBAAMnF,EAAQC,KAAK,QAF9B,UAIE,cAAC8P,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,wBAExB,cAACjG,GAAA,EAAD,IACA,eAAC8F,GAAA,EAAD,CACEjN,QAAM,EACNsC,QAAS,WACHoF,QAAQ,kEAHhB,UAQE,cAACwF,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,gCAExB,eAACH,GAAA,EAAD,CACEjN,QAAM,EACNsC,QAAS,WACHoF,QAAQ,kEAHhB,UAQE,cAACwF,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,sC,sfC9HvB,IAAMC,GAAYxN,IAAOK,IAAV,KAClBR,GAUS4N,GAAgBzN,IAAOK,IAAV,MAObqN,GAAU1N,IAAOK,IAAV,MCTLsN,OATf,WACE,OACE,eAACH,GAAD,WACE,cAACC,GAAD,kBACA,cAACC,GAAD,yBCoDSE,OApCf,WACE,IAAMC,EAAexQ,EAAe,gBAGpC,OAFIwQ,GAAcxQ,EAAe,MAAOwQ,EAAc,GAGpD,cAAC,IAAD,CAAQvQ,QAASA,EAAjB,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CACEH,OAAK,EACLD,KAAK,IACL4Q,OAAQ,kBAAOD,EAAe,cAAC,GAAD,IAAW,cAAC,GAAD,OAE3C,cAAC,IAAD,CAAO1Q,OAAK,EAACD,KAAK,SAASD,UAAWoG,KACtC,cAAC,IAAD,CAAOlG,OAAK,EAACD,KAAK,UAAUD,UAAW+D,KACvC,cAAC,IAAD,CACE7D,OAAK,EACLD,KAAK,2BACLD,UAAWwJ,KAEb,cAAC,IAAD,CAAOtJ,OAAK,EAACD,KAAK,QAAQD,UAAWgH,KACrC,cAAC,IAAD,CAAO9G,OAAK,EAACD,KAAK,YAAYD,UAAW6K,KAGzC,cAAC,EAAD,CAAW3K,OAAK,EAACD,KAAK,QAAQD,UAAW8L,KACzC,cAAC,EAAD,CAAW5L,OAAK,EAACD,KAAK,YAAYD,UAAW2N,KAC7C,cAAC,EAAD,CAAWzN,OAAK,EAACD,KAAK,cAAcD,UAAWuO,KAE/C,cAAC,EAAD,CAAWrO,OAAK,EAACD,KAAK,UAAUD,UAAWoP,KAC3C,cAAC,EAAD,CAAWlP,OAAK,EAACD,KAAK,MAAMD,UAAWgK,KAEvC,cAAC,IAAD,CAAOhK,UAAW0Q,WCzCXI,OARf,WACE,OACE,qCACE,cAAC/R,EAAD,IACA,cAAC,GAAD,QCISgS,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,GAAD,MAEFpS,SAASqS,eAAe,SAM1BV,O","file":"static/js/main.dacfba28.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap');\n    font-family: 'Noto Sans KR', sans-serif;\n  }\n`;\n","export default {\n  delete: (name: string): void => {\n    const date = new Date();\n    document.cookie = `${name}= ;expires=${date.toUTCString()};path=/`;\n  },\n  set: (name: string, value = 'none', day = 0): void => {\n    const date = new Date();\n    date.setTime(date.getTime() + day * 60 * 60 * 24 * 1000);\n    document.cookie = `${name}=${value};expires=${date.toUTCString()};path=/`;\n  },\n  get: (name: string): string => {\n    const value = document.cookie.match(`(^|;) ?${name}=([^;]*)(;|$)`);\n\n    return value ? value[2] : '';\n  },\n};\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({\n  basename: process.env.PUBLIC_URL,\n});\n","import React from 'react';\nimport { Route, RouteComponentProps } from 'react-router-dom';\n\nimport callCookie from '../../utils/cookie';\n\nimport history from '../../utils/browserHistory';\n\ninterface authRouteProps {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  path: string | [string];\n  exact?: boolean;\n}\n\nconst AuthRoute = ({ component, path, exact }: authRouteProps) => {\n  const isLogin = Boolean(callCookie.get('jwt'));\n\n  if (!isLogin) history.push('/login');\n\n  return <Route path={path} exact={exact} component={component} />;\n};\n\nAuthRoute.defaultProps = { exact: false };\n\nexport default AuthRoute;\n","import history from './browserHistory';\nimport callCookie from './cookie';\n\ntype fetchMethod = 'get' | 'post' | 'put' | 'delete' | 'PATCH';\n\ninterface networkMessage {\n  code: number;\n  success: boolean;\n  msg: string;\n}\n\nconst errorHandling = async function (response: Response): Promise<boolean> {\n  const { status } = response;\n\n  if (status === 401) {\n    callCookie.delete('jwt');\n    history.push('/login');\n    return false;\n  }\n\n  return true;\n};\nconst callFetch = function <I>(\n  url: string,\n  method: fetchMethod,\n  body: I | undefined = undefined,\n): Promise<Response> {\n  const jwt = callCookie.get('jwt');\n\n  const init: RequestInit = {\n    headers: {\n      'Content-Type': 'application/json',\n      'X-AUTH-TOKEN': jwt || '',\n    },\n    method,\n    body: method !== 'get' ? JSON.stringify(body) : undefined,\n  };\n  return fetch(url, init);\n};\nconst toJson = async function <O>(\n  response: Response,\n): Promise<O & networkMessage> {\n  let body: O & networkMessage;\n  try {\n    body = await response.clone().json();\n  } catch (err) {\n    const responseText = await response.text();\n    throw new Error(`Error converting to json : ${responseText}`);\n  }\n\n  return body;\n};\nconst callApiBase = async function <I, O>(\n  url: string,\n  method: fetchMethod,\n  body: I | undefined = undefined,\n): Promise<(O & networkMessage) | undefined> {\n  let serverUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n  if (url.indexOf('http://') !== -1 || url.indexOf('https://') !== -1)\n    serverUrl = '';\n\n  const response: Response = await callFetch<I>(\n    `${serverUrl}${url}`,\n    method,\n    body,\n  );\n\n  const ok = await errorHandling(response);\n  if (ok) return toJson<O>(response);\n\n  // console.log('Available after login');\n  return undefined;\n};\n\nexport default {\n  get: <I, O>(url: string): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'get'),\n  post: <I, O>(\n    url: string,\n    body: I,\n  ): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'post', body),\n  put: <I, O>(\n    url: string,\n    body: I,\n  ): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'put', body),\n  delete: <I, O>(\n    url: string,\n    body: I,\n  ): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'delete', body),\n\n  patch: <I, O>(\n    url: string,\n    body: I,\n  ): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'PATCH', body),\n};\n","import callApi from '../../utils/api';\nimport callCookie from '../../utils/cookie';\n\n// login\nexport type loginReq = {\n  id: string;\n  password: String;\n};\nexport type loginRes = {\n  data: string;\n};\nexport const login = async function (isStaySignedIn: boolean, req: loginReq) {\n  const res = await callApi.post<loginReq, loginRes>('signin', req);\n  if (res?.success) {\n    if (isStaySignedIn) callCookie.set('staySignedIn', res.data, 10000);\n    callCookie.set('jwt', res.data, 2);\n  }\n\n  return res;\n};\n\n// signup\nexport type signupReq = {\n  id: string;\n  name: string;\n  password: string;\n};\nexport type signupRes = {\n  data: string;\n};\nexport const signup = async function (req: signupReq) {\n  const res = await callApi.post<signupReq, signupRes>('signup', req);\n  return res;\n};\n\n// email-verification\nexport const emailVerification = async (code: string) => {\n  const res = await callApi.get<{}, {}>(`email-verification?code=${code}`);\n  return res;\n};\n\n// send-certcode\nexport type sendCertcodeReq = {\n  email: string;\n};\nexport const sendCertcode = async (req: sendCertcodeReq) => {\n  const res = await callApi.post<sendCertcodeReq, {}>('send-certcode', req);\n  return res;\n};\n\n// set-new-password\nexport type setNewPasswordReq = {\n  code: string;\n  password: string;\n};\nexport const setNewPassword = async (req: setNewPasswordReq) => {\n  const res = await callApi.post<setNewPasswordReq, {}>(\n    'set-new-password',\n    req,\n  );\n  return res;\n};\n","import styled, { css } from 'styled-components';\n\nexport const Page = css`\n  padding: 20px 27px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 18px;\n\n  border: solid 1px #e0e0e0;\n  border-radius: 10px;\n\n  padding-left: 23px;\n\n  width: 360px;\n  height: 50px;\n\n  font-size: 15px;\n\n  background: #ffffff;\n\n  box-sizing: border-box;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 18px;\n\n  border: none;\n  border-radius: 10px;\n\n  width: 360px;\n  height: 50px;\n\n  font-size: 17px;\n  font-weight: bold;\n\n  cursor: pointer;\n\n  &.on {\n    /* 클릭 시 컬러 */\n  }\n`;\n","import styled from 'styled-components';\n\nimport { Page, Button } from '../common';\n\nexport const SignupPage = styled.div`\n  ${Page}\n\n  padding-top: 161px;\n`;\n\nexport const AfterSignupBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const AfterSignupText1 = styled.div`\n  color: #11a656;\n  font-size: 35px;\n  font-weight: bold;\n`;\nexport const AfterSignupText2 = styled.div`\n  font-size: 22px;\n`;\nexport const AfterSignupText2Strong = styled.div`\n  display: inline;\n\n  font-size: 22px;\n  font-weight: bold;\n  text-decoration: underline;\n`;\n\nexport const AfterSignupText3 = styled.div`\n  font-size: 15px;\n  font-weight: 400;\n`;\nexport const AfterSignupText3Strong = styled.div`\n  display: inline;\n\n  font-weight: 500;\n`;\nexport const LoginLinkBtn = styled(Button)`\n  color: #11a656;\n  background-color: #f2f2f2;\n`;\n\nexport const SingupInfo = styled.div`\n  font-size: 24px;\n`;\nexport const SingupInfoStrong = styled.div`\n  display: inline;\n\n  color: #11a656;\n  font-weight: bold;\n  text-decoration: underline;\n`;\n\nexport const SignupBtn = styled(Button)`\n  color: #ffffff;\n  background-color: #11a656;\n`;\n","import React, { useState } from 'react';\nimport history from '../../utils/browserHistory';\n\nimport { signup } from '../../container/sign';\n\nimport {\n  SignupPage,\n  AfterSignupBox,\n  AfterSignupText1,\n  AfterSignupText2,\n  AfterSignupText2Strong,\n  AfterSignupText3,\n  AfterSignupText3Strong,\n  LoginLinkBtn,\n  SingupInfo,\n  SingupInfoStrong,\n  SignupBtn,\n} from './style';\n\nimport { Input } from '../common';\n\nfunction Signup() {\n  const [signupField, setSignupField] = useState({\n    email: '',\n    password: '',\n    rPassword: '',\n    name: '',\n  });\n  const [afterSignup, setAfterSignup] = useState(false);\n\n  const { email, password, rPassword, name } = signupField;\n\n  const changeState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName, value } = e.target;\n\n    setSignupField({\n      ...signupField,\n      [targetName]: value,\n    });\n  };\n\n  const onClickSignupBtn = async function (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    const target = e.currentTarget;\n    target.disabled = true;\n    target.classList.add('on');\n\n    if (password !== rPassword) {\n      alert('비밀번호 두 개가 다릅니다.');\n      target.disabled = false;\n      target.classList.remove('on');\n      return;\n    }\n\n    const res = await signup({\n      id: email,\n      password,\n      name,\n    });\n\n    if (res?.success === false) {\n      alert(res?.msg);\n\n      setSignupField({\n        email: '',\n        password: '',\n        rPassword: '',\n        name: '',\n      });\n      target.disabled = false;\n      target.classList.remove('on');\n\n      return;\n    }\n\n    // alert('회원가입이 되었습니다.');\n    // history.push('/login');\n\n    // 이메일 확인해달라는 문구 작성하기\n    setAfterSignup(true);\n  };\n\n  return (\n    <SignupPage>\n      {afterSignup ? (\n        <AfterSignupBox>\n          <AfterSignupText1>회원가입을</AfterSignupText1>\n          <AfterSignupText1 style={{ marginBottom: '36px' }}>\n            축하드립니다!😆\n          </AfterSignupText1>\n          <AfterSignupText2>\n            <AfterSignupText2Strong>‘{email}’</AfterSignupText2Strong>로\n          </AfterSignupText2>\n          <AfterSignupText2 style={{ marginBottom: '30px' }}>\n            이메일을 전송하였습니다.\n          </AfterSignupText2>\n          <AfterSignupText3>이메일 인증을 완료하고,</AfterSignupText3>\n          <AfterSignupText3 style={{ marginBottom: '90px' }}>\n            나누기와 함께{' '}\n            <AfterSignupText3Strong>\n              친환경 공유소비 생활\n            </AfterSignupText3Strong>\n            을 즐겨보아요!\n          </AfterSignupText3>\n          <LoginLinkBtn type=\"button\" onClick={() => history.push('/login')}>\n            로그인화면으로\n          </LoginLinkBtn>\n        </AfterSignupBox>\n      ) : (\n        <>\n          <SingupInfo>나누기는</SingupInfo>\n          <SingupInfo>\n            <SingupInfoStrong>학교 웹메일</SingupInfoStrong>로만\n          </SingupInfo>\n          <SingupInfo style={{ marginBottom: '18px' }}>\n            가입이 가능합니다.\n          </SingupInfo>\n\n          <Input\n            autoComplete=\"off\"\n            name=\"email\"\n            placeholder=\"이메일\"\n            value={email}\n            onChange={changeState}\n          />\n          <Input\n            name=\"password\"\n            placeholder=\"비밀번호\"\n            type=\"password\"\n            value={password}\n            onChange={changeState}\n          />\n          <Input\n            name=\"rPassword\"\n            placeholder=\"비밀번호 확인\"\n            type=\"password\"\n            value={rPassword}\n            onChange={changeState}\n          />\n          <Input\n            autoComplete=\"off\"\n            name=\"name\"\n            placeholder=\"이름\"\n            value={name}\n            onChange={changeState}\n          />\n          <SignupBtn type=\"button\" onClick={onClickSignupBtn}>\n            회원가입\n          </SignupBtn>\n        </>\n      )}\n    </SignupPage>\n  );\n}\n\nexport default Signup;\n","import styled from 'styled-components';\n\nimport { Page, Button } from '../common';\n\nexport const LoginPage = styled.div`\n  ${Page}\n`;\n\nexport const StaySignedInBox = styled.div`\n  display: flex;\n  align-items: center;\n\n  cursor: pointer;\n`;\nexport const StaySignedInBtn = styled.button`\n  padding: 0px;\n  border: solid 1px #dadada;\n  margin-right: 8px;\n\n  width: 15px;\n  height: 15px;\n\n  line-height: 15px;\n  text-align: center;\n\n  color: #fff;\n  font-size: 15px;\n  font-weight: 900;\n\n  background-color: #fff;\n\n  transition: all 0.5s;\n\n  &:focus {\n    outline: none;\n  }\n  &.on {\n    border: none;\n    background-color: #11a656;\n  }\n`;\nexport const StaySignedInLabel = styled.div`\n  font-size: 12px;\n`;\n\nexport const LinkBox = styled.div`\n  display: flex;\n\n  padding-left: 1px;\n\n  width: 360px;\n\n  box-sizing: border-box;\n`;\n\nexport const FindLink = styled.div`\n  margin-left: auto;\n\n  color: #828282;\n  font-size: 12px;\n\n  cursor: pointer;\n`;\n\nexport const LoginBtn = styled(Button)`\n  color: #ffffff;\n  background-color: #11a656;\n`;\nexport const SignupLink = styled(Button)`\n  margin-bottom: 13px;\n\n  border: solid 1px #11a656;\n  background-color: #ffffff;\n`;\n","import React, { useState, useEffect } from 'react';\nimport callCookie from '../../utils/cookie';\nimport history from '../../utils/browserHistory';\n\nimport { login } from '../../container/sign';\n\nimport {\n  LoginPage,\n  StaySignedInBox,\n  StaySignedInBtn,\n  StaySignedInLabel,\n  LinkBox,\n  FindLink,\n  LoginBtn,\n  SignupLink,\n} from './style';\n\nimport { Input } from '../common';\n\nfunction Login() {\n  const [isStaySignedIn, setIsStaySignedIn] = useState(false);\n  const [loginField, setLoginField] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = loginField;\n\n  const changeState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setLoginField({\n      ...loginField,\n      [name]: value,\n    });\n  };\n\n  const onClickLoginBtn = async function (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    const target = e.currentTarget;\n    target.disabled = true;\n    target.classList.add('on');\n\n    const res = await login(isStaySignedIn, { id: email, password });\n    setLoginField({\n      email: '',\n      password: '',\n    });\n    target.disabled = false;\n    target.classList.remove('on');\n\n    if (res?.success === false) {\n      alert(res.msg);\n      return;\n    }\n\n    history.push('/main');\n  };\n\n  useEffect(() => {\n    callCookie.delete('staySignedIn');\n    callCookie.delete('jwt');\n  }, []);\n\n  return (\n    <LoginPage>\n      <Input\n        name=\"email\"\n        placeholder=\"이메일\"\n        value={email}\n        onChange={changeState}\n      />\n      <Input\n        name=\"password\"\n        placeholder=\"비밀번호\"\n        type=\"password\"\n        value={password}\n        onChange={changeState}\n      />\n\n      <LoginBtn type=\"button\" onClick={onClickLoginBtn}>\n        로그인\n      </LoginBtn>\n\n      <SignupLink type=\"button\" onClick={() => history.push('/signup')}>\n        회원가입\n      </SignupLink>\n\n      <LinkBox>\n        <StaySignedInBox\n          onClick={() => {\n            setIsStaySignedIn(!isStaySignedIn);\n          }}\n        >\n          <StaySignedInBtn type=\"button\" className={isStaySignedIn ? 'on' : ''}>\n            ✔\n          </StaySignedInBtn>\n          <StaySignedInLabel>로그인 상태 유지</StaySignedInLabel>\n        </StaySignedInBox>\n\n        <FindLink onClick={() => history.push('/find')}>비밀번호 찾기</FindLink>\n      </LinkBox>\n    </LoginPage>\n  );\n}\n\nexport default Login;\n","import styled from 'styled-components';\n\nimport { Page, Button } from '../common';\n\nexport const FindPage = styled.div`\n  ${Page}\n`;\nexport const MainText = styled.div`\n  margin-bottom: 18px;\n\n  font-size: 24px;\n  font-weight: bold;\n  text-decoration: underline;\n`;\n\nexport const LinkBox = styled.div`\n  display: flex;\n\n  width: 360px;\n`;\n\nexport const LoginLink = styled.div`\n  color: #828282;\n  font-size: 12px;\n\n  cursor: pointer;\n`;\n\nexport const SignupLink = styled.div`\n  margin-left: auto;\n\n  color: #828282;\n  font-size: 12px;\n\n  cursor: pointer;\n`;\n\nexport const Text = styled.div`\n  margin-bottom: 40px;\n\n  font-size: clamp(23px, 4vw, 30px);\n  font-weight: bold;\n`;\n\nexport const Btn = styled(Button)`\n  margin-bottom: 11px;\n\n  color: #ffffff;\n  background-color: #11a656;\n`;\n","import React, { useState } from 'react';\nimport history from '../../utils/browserHistory';\nimport { sendCertcode, setNewPassword } from '../../container/sign';\n\nimport {\n  FindPage,\n  MainText,\n  Text,\n  LinkBox,\n  LoginLink,\n  SignupLink,\n  Btn,\n} from './style';\nimport { Input } from '../common';\n\nfunction Find() {\n  const [findField, setFindField] = useState({\n    email: '',\n    code: '',\n    password: '',\n    rPassword: '',\n  });\n  const [afterSendingCode, setAfterSendingCode] = useState(false);\n  const [afterSetNewPassword, setAfterSetNewPassword] = useState(false);\n\n  const { email, code, password, rPassword } = findField;\n\n  const changeState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setFindField({\n      ...findField,\n      [name]: value,\n    });\n  };\n\n  const onClickSendCodeBtn = async function (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    const target = e.currentTarget;\n    target.disabled = true;\n    target.classList.add('on');\n\n    const res = await sendCertcode({ email });\n\n    target.disabled = false;\n    target.classList.remove('on');\n\n    if (res?.success === false) {\n      alert(res.msg);\n\n      setFindField({\n        email: '',\n        code: '',\n        password: '',\n        rPassword: '',\n      });\n      return;\n    }\n\n    setAfterSendingCode(true);\n  };\n\n  const onClickSetNewPasswordBtn = async function (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    const target = e.currentTarget;\n    target.disabled = true;\n    target.classList.add('on');\n\n    if (password !== rPassword) {\n      alert('비밀번호 두 개가 다릅니다.');\n      target.disabled = false;\n      target.classList.remove('on');\n      return;\n    }\n\n    const res = await setNewPassword({ code, password });\n\n    setFindField({\n      email: '',\n      code: '',\n      password: '',\n      rPassword: '',\n    });\n    target.disabled = false;\n    target.classList.remove('on');\n\n    if (res?.success === false) {\n      alert(res.msg);\n      return;\n    }\n\n    setAfterSetNewPassword(true);\n  };\n\n  return (\n    <FindPage>\n      <MainText>비밀번호 찾기</MainText>\n      <>\n        {afterSetNewPassword ? (\n          <>\n            <Text>비밀번호가 변경되었습니다.</Text>\n            <Btn type=\"button\" onClick={() => history.push('/login')}>\n              로그인 화면으로\n            </Btn>\n          </>\n        ) : (\n          <>\n            {afterSendingCode ? (\n              <>\n                <Input\n                  autoComplete=\"off\"\n                  name=\"code\"\n                  placeholder=\"인증 코드\"\n                  value={code}\n                  onChange={changeState}\n                />\n                <Input\n                  name=\"password\"\n                  placeholder=\"비밀번호\"\n                  type=\"password\"\n                  value={password}\n                  onChange={changeState}\n                />\n                <Input\n                  name=\"rPassword\"\n                  placeholder=\"비밀번호 확인\"\n                  type=\"password\"\n                  value={rPassword}\n                  onChange={changeState}\n                />\n\n                <Btn type=\"button\" onClick={onClickSetNewPasswordBtn}>\n                  비밀번호 재설정\n                </Btn>\n              </>\n            ) : (\n              <>\n                <Input\n                  name=\"email\"\n                  placeholder=\"이메일\"\n                  value={email}\n                  onChange={changeState}\n                />\n\n                <Btn type=\"button\" onClick={onClickSendCodeBtn}>\n                  인증메일 받기\n                </Btn>\n\n                <LinkBox>\n                  <LoginLink onClick={() => history.push('/login')}>\n                    로그인\n                  </LoginLink>\n                  <SignupLink onClick={() => history.push('/signup')}>\n                    회원가입\n                  </SignupLink>\n                </LinkBox>\n              </>\n            )}\n          </>\n        )}\n      </>\n    </FindPage>\n  );\n}\n\nexport default Find;\n","import styled from 'styled-components';\n\nexport const EmailVerificationPage = styled.div`\n  width: 100vw;\n  height: 100vh;\n\n  overflow: hidden;\n`;\n\nexport const ContentsBox = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100vw;\n  height: 100vh;\n\n  z-index: 1000;\n`;\n\nexport const Filter = styled.div<{ opacity: number }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: ${(props) => `rgba(0, 0, 0, ${props.opacity})`};\n\n  z-index: 100;\n`;\nexport const TypingEffectText = styled.h1`\n  font-size: clamp(32px, 6vw, 100px);\n\n  color: #ffffff;\n`;\n\nexport const SlothVideo = styled.video`\n  position: relative;\n  top: -18vh;\n\n  height: 136vh;\n  width: 100vw;\n\n  object-fit: cover;\n`;\n\nexport const Btn = styled.div`\n  color: #fff;\n  font-size: 20px;\n\n  height: 40px;\n\n  transition: all 0.2s;\n\n  cursor: pointer;\n\n  &:hover {\n    font-size: 22px;\n  }\n`;\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport history from '../../utils/browserHistory';\nimport {\n  EmailVerificationPage,\n  ContentsBox,\n  TypingEffectText,\n  Filter,\n  SlothVideo,\n  Btn,\n} from './style';\n\nimport { emailVerification } from '../../container/sign';\n\nconst texts = ['...인증', '..되었습니다..'];\n\ninterface typingEffectProps {\n  check: boolean;\n  callback: () => void;\n}\nconst TypingEffect = ({ check, callback }: typingEffectProps) => {\n  const time = useRef(0);\n  const ref = useRef({} as HTMLHeadingElement);\n  const handleRef = useRef({} as NodeJS.Timeout);\n\n  // console.log('TypingEffect : ', check);\n\n  useEffect(() => {\n    const between = '.';\n    const speed = 800;\n\n    clearTimeout(handleRef.current);\n\n    const typeWriter = () => {\n      // console.log(`time: ${time.current}, check: ${check}`);\n\n      let step = -1;\n      if (texts[0].length > time.current) step = 0;\n      else if (!check) step = 1;\n      else step = 2;\n\n      let char = '';\n      switch (step) {\n        case 0:\n          char = texts[0].charAt(time.current);\n          time.current += 1;\n          break;\n        case 1:\n          char = between;\n          break;\n        case 2:\n          char = texts[1].charAt(time.current - texts[0].length);\n          time.current += 1;\n          break;\n        default:\n      }\n\n      // console.log(`step: ${step}, char: ${char}`);\n\n      ref.current.innerHTML += char;\n      if (time.current <= texts[0].length + texts[1].length)\n        handleRef.current = setTimeout(typeWriter, speed);\n      else callback();\n    };\n    typeWriter();\n  }, [check, callback]);\n\n  return (\n    <TypingEffectText ref={ref}>{/* TypingEffect Text */}</TypingEffectText>\n  );\n};\n\nconst BackgroundGif = () => (\n  <SlothVideo loop autoPlay muted playsInline>\n    <source\n      src=\"https://thumbs.gfycat.com/AdventurousPointlessGull-mobile.webm\"\n      type=\"video/webm\"\n    />\n    <source\n      src=\"https://thumbs.gfycat.com/AdventurousPointlessGull-mobile.mp4\"\n      type=\"video/mp4\"\n    />\n  </SlothVideo>\n);\n\nconst EmailVerification = () => {\n  const [btnVisible, setBtnVisible] = useState(false);\n  const [afterVerification, setAfterVerification] = useState(false);\n  const { code } = useParams<{ code: string }>();\n\n  const init = useMemo(\n    () =>\n      async function () {\n        const res = await emailVerification(code);\n        if (res?.success) {\n          setAfterVerification(true);\n        } else {\n          texts[1] = '에..실패..했습니다..';\n          setAfterVerification(true);\n        }\n      },\n    [code],\n  );\n\n  useEffect(() => {\n    init();\n  }, [init]);\n\n  return (\n    <>\n      <EmailVerificationPage>\n        <ContentsBox>\n          <TypingEffect\n            check={afterVerification}\n            callback={() => {\n              setBtnVisible(true);\n            }}\n          />\n          {btnVisible ? (\n            <Btn onClick={() => history.replace('/')}>로그인하러 가기</Btn>\n          ) : (\n            <></>\n          )}\n        </ContentsBox>\n\n        <BackgroundGif />\n\n        <Filter opacity={btnVisible ? 0.8 : 0.7} />\n      </EmailVerificationPage>\n    </>\n  );\n};\n\nexport default EmailVerification;\n","import React from 'react'\nimport { Box, Button, Container, Divider, TextField, Typography } from '@material-ui/core'\n\nfunction CustomerServicePage() {\n  return (\n    <Container maxWidth='sm'>\n      <Typography variant='h6'>\n        고객문의\n      </Typography>\n      <Typography variant='subtitle2'>\n        문의할 내용을 입력해 보내주세요.\n      </Typography>\n      <Divider />\n      <Box>\n        <TextField\n          multiline\n          rows={4}\n          placeholder='문의 내용을 입력해주세요.'\n          fullWidth\n          variant='outlined'\n        />\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={() => {\n            if (confirm('해당 내용으로 문의를 보낼까요?')) {\n              // TODO: 문의 보내기\n            }\n          }}\n        >\n          보내기\n        </Button>\n      </Box>\n    </Container>\n  )\n}\n\nexport default CustomerServicePage","import React from 'react'\nimport { Container, Typography } from '@material-ui/core'\n\nfunction PolicyPage() {\n  return (\n    <Container maxWidth='sm'>\n      <Typography variant='h6'>\n        이용약관 페이지\n      </Typography>\n    </Container>\n  )\n}\n\nexport default PolicyPage","import callApi from '../../utils/api';\n\nexport type postType = {\n  chatUrl: string;\n  content: string;\n  createdAt: Date;\n  maxParti: number;\n  minParti: number;\n  nanumPrice: number;\n  post_id: number;\n  price: number;\n  title: string;\n  user: {\n    name: string;\n    uid: string;\n  };\n};\n\n// getPosts\nexport type getPostsRes = {\n  data: {\n    next: string;\n    page: number;\n    posts: postType[];\n    previous: string;\n    size: number;\n  };\n};\nexport const getPosts = async function (page: number) {\n  const res = await callApi.get<{}, getPostsRes>(`posts?page=${page}`);\n  return res;\n};\n\n// getPost\nexport type getPostRes = {\n  data: postType;\n};\n\nexport const getPost = async function (id: number) {\n  const res = await callApi.get<{}, getPostRes>(`posts/${id}`);\n  return res;\n};\n\n// createPost\nexport type createPostReq = {\n  title: string;\n  content: string;\n  totalPrice: number;\n  nanumPrice: number;\n  minParti: number;\n  maxParti: number;\n  chatUrl: string;\n};\nexport type createPostRes = {\n  data: postType;\n};\nexport const createPost = async function (req: createPostReq) {\n  const res = await callApi.post<createPostReq, createPostRes>(`posts`, req);\n  return res;\n};\n","import styled from 'styled-components';\n\nimport { Page } from '../common';\n\nexport const MainPage = styled.div`\n  ${Page}\n`;\n\nexport const PostUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  margin: 0px;\n  padding: 0px;\n\n  width: 100%;\n\n  list-style: none;\n\n  &.col-4 {\n    & > li {\n      width: 25%;\n    }\n  }\n  &.col-2 {\n    & > li {\n      width: calc(50% - 5px);\n    }\n    li:nth-child(2n) {\n      margin-left: 10px;\n    }\n  }\n  &.col-1 {\n    & > li {\n      width: 100%;\n    }\n  }\n`;\n\nexport const PostLi = styled.li`\n  position: relative;\n\n  margin-bottom: 12px;\n\n  box-sizing: border-box;\n`;\n\nexport const PostBox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const PostImage = styled.div<{ url?: string }>`\n  position: relative;\n\n  margin-bottom: 10px;\n  border-radius: 10px;\n\n  width: 175px;\n  height: 185px;\n\n  cursor: pointer;\n\n  ${(props) =>\n    props.url\n      ? `background-image: url(${props.url}); background-size: cover;`\n      : `background-color: #C4C4C4; opacity: 0.8;`}\n`;\n\nexport const PostInfo = styled.div``;\n\nexport const PostTitle = styled.div`\n  margin-bottom: 5px;\n\n  font-size: 15px;\n  font-weight: bold;\n`;\nexport const PostTag = styled.div`\n  margin-bottom: 5px;\n\n  color: #828282;\n  font-size: 10px;\n  font-weight: 400;\n`;\nexport const PostInfoKeyValueBox = styled.div`\n  margin-bottom: 5px;\n\n  font-size: 11px;\n  font-weight: bold;\n`;\nexport const PostInfoKey = styled.div`\n  display: inline;\n\n  color: #11a656;\n  text-decoration: underline;\n`;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport history from '../../utils/browserHistory';\n\nimport { postType, getPosts, getPostsRes } from '../../container/post';\n\nimport {\n  MainPage,\n  PostUl,\n  PostLi,\n  PostBox,\n  PostImage,\n  PostInfo,\n  PostTitle,\n  PostTag,\n  PostInfoKey,\n  PostInfoKeyValueBox,\n} from './style';\n\nfunction Main() {\n  const [posts, setPosts] = useState<postType[]>([]);\n  const [currentPageInfo, setCurrentPageInfo] = useState<getPostsRes>();\n\n  const nextPage = useCallback(async () => {\n    if (!currentPageInfo?.data.next) {\n      return;\n    }\n\n    const res = await getPosts(currentPageInfo.data.page + 1);\n    if (res?.success) {\n      const alreadyImportedPosts_id = currentPageInfo.data.posts.map(\n        (post) => post.post_id,\n      );\n      const newPosts = res.data.posts.filter(\n        (post) => !alreadyImportedPosts_id.includes(post.post_id),\n      );\n\n      setPosts([...posts, ...newPosts]);\n      setCurrentPageInfo({ data: res.data });\n    }\n  }, [currentPageInfo, posts]);\n\n  useEffect(() => {\n    async function init() {\n      const res = await getPosts(0);\n      if (res?.success) {\n        setPosts(res.data.posts);\n        setCurrentPageInfo({ data: res.data });\n      }\n    }\n    init();\n  }, []);\n\n  return (\n    <MainPage\n      onScroll={(e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n        const { offsetHeight, scrollHeight, scrollTop } = e.currentTarget;\n        if (offsetHeight + scrollTop >= scrollHeight) {\n          nextPage();\n        }\n      }}\n    >\n      <PostUl className=\"col-2\">\n        {posts.map((post) => (\n          <PostLi key={post.post_id}>\n            <PostBox>\n              <PostImage\n                onClick={() => {\n                  history.push({\n                    pathname: `/post/${post.post_id}`,\n                    state: { propsPost: post },\n                  });\n                }}\n              />\n              <PostInfo>\n                <PostTitle\n                  onClick={() => {\n                    history.push({\n                      pathname: `/post/${post.post_id}`,\n                      state: { propsPost: post },\n                    });\n                  }}\n                >\n                  {post.title}\n                </PostTitle>\n                <PostTag>반려동물 용품·중화2동</PostTag>\n                <PostInfoKeyValueBox>\n                  <PostInfoKey>나누기 수</PostInfoKey> {post.minParti} ~{' '}\n                  {post.maxParti}개\n                </PostInfoKeyValueBox>\n                <PostInfoKeyValueBox>\n                  <PostInfoKey>나누기 가격</PostInfoKey> {post.price}원\n                </PostInfoKeyValueBox>\n              </PostInfo>\n            </PostBox>\n          </PostLi>\n        ))}\n      </PostUl>\n    </MainPage>\n  );\n}\n\nexport default Main;\n","import styled from 'styled-components';\n\nimport { Button } from '../common';\n\nexport const PostPage = styled.div``;\n\nexport const PostImage = styled.div<{ url?: string }>`\n  position: relative;\n\n  width: 414px;\n  height: 350px;\n\n  cursor: pointer;\n\n  ${(props) =>\n    props.url\n      ? `background-image: url(${props.url}); background-size: cover;`\n      : `background: rgba(229, 229, 229, 0.5); opacity: 0.8;`}\n`;\n\nexport const PostInfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  border-bottom: 2px solid #e0e0e0;\n  padding: 16px 27px 24px;\n`;\nexport const PostInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 20px;\n`;\n\nexport const PostTitle = styled.div`\n  font-size: 15px;\n  font-weight: bold;\n`;\nexport const PostTag = styled.div`\n  color: #828282;\n  font-size: 10px;\n  font-weight: 400;\n`;\nexport const PostInfoKeyValueBox = styled.div`\n  font-size: 11px;\n  font-weight: bold;\n`;\nexport const PostInfoKey = styled.div`\n  display: inline;\n\n  color: #11a656;\n  text-decoration: underline;\n`;\nexport const Btn = styled(Button)`\n  margin-bottom: 0px;\n\n  color: #ffffff;\n  background-color: #11a656;\n`;\n\nexport const PostContent = styled.div`\n  padding: 24px 29px;\n\n  font-size: 14px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { RouteComponentProps, useParams } from 'react-router-dom';\n\nimport { postType, getPost } from '../../container/post';\n\nimport {\n  PostPage,\n  PostImage,\n  PostInfoBox,\n  PostInfo,\n  PostTitle,\n  PostTag,\n  PostInfoKeyValueBox,\n  PostInfoKey,\n  Btn,\n  PostContent,\n} from './style';\n\nfunction Post({\n  location,\n}: RouteComponentProps<{}, any, { propsPost: postType }>) {\n  const propsPost = location.state?.propsPost;\n  const { id: stringId } = useParams<{ id: string }>();\n\n  // console.log('propsPost', propsPost);\n  const [post, setPost] = useState(propsPost);\n\n  useEffect(() => {\n    // console.log('useEffect');\n    const id = Number(stringId);\n    const init = async () => {\n      const res = await getPost(id);\n      if (res?.success) setPost(res.data);\n    };\n\n    if (!post || post.post_id !== id) init();\n  }, [post, stringId]);\n\n  // console.log('post', post);\n\n  return (\n    <PostPage>\n      {post ? (\n        <>\n          <PostImage />\n          <PostInfoBox>\n            <PostInfo>\n              <div>\n                <PostTitle style={{ marginBottom: '5px' }}>\n                  {post.title}\n                </PostTitle>\n                <PostTag>반려동물 용품·중화2동</PostTag>\n              </div>\n              <div>\n                <PostInfoKeyValueBox style={{ marginBottom: '5px' }}>\n                  <PostInfoKey>나누기 수</PostInfoKey> {post.minParti} ~{' '}\n                  {post.maxParti}개\n                </PostInfoKeyValueBox>\n                <PostInfoKeyValueBox>\n                  <PostInfoKey>나누기 가격</PostInfoKey> {post.price}원\n                </PostInfoKeyValueBox>\n              </div>\n            </PostInfo>\n            <Btn>나누기 참여하기</Btn>\n          </PostInfoBox>\n          <PostContent>{post.content}</PostContent>\n        </>\n      ) : (\n        <div>스켈레톤 제작 예정 ...</div>\n      )}\n    </PostPage>\n  );\n}\nPost.defaultProps = { propsPost: undefined };\n\nexport default Post;\n","import styled from 'styled-components';\n\nimport { Page } from '../common';\n\nexport const PostWritePage = styled.div`\n  ${Page}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  background-color: #f7c46a;\n`;\n\nexport const CancelBtn = styled.div`\n  position: absolute;\n  top: 5%;\n  left: -74px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 6px 8px;\n  border-bottom-left-radius: 15px;\n  border-top-left-radius: 15px;\n\n  font-size: 17px;\n  font-weight: bold;\n\n  background-color: #fff;\n\n  opacity: 0.3;\n\n  transition: all 0.4s;\n\n  cursor: pointer;\n\n  &:hover {\n    left: -84px;\n\n    opacity: 1;\n  }\n`;\n\nexport const PostWriteBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  position: relative;\n\n  width: 1000px;\n  height: 650px;\n`;\n\nexport const PostInfoBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  width: 100%;\n  height: 500px;\n`;\n\nexport const InputImage = styled.div<{ url?: string }>`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 500px;\n  height: 500px;\n\n  cursor: pointer;\n\n  ${(props) =>\n    props.url\n      ? `background-image: url(${props.url}); background-size: cover;`\n      : `background-color: #FFBB6B;`}\n`;\n\nexport const InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: calc(100% - 500px);\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 8px;\n\n  border: solid 1px #dadada;\n  border-radius: 6px;\n\n  padding-left: 10px;\n\n  width: 80%;\n  height: 45px;\n\n  font-size: 16px;\n\n  background: #fffafa;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const WriteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border: none;\n  border-radius: 22px;\n\n  width: 80%;\n  height: 100px;\n\n  text-align: center;\n\n  color: #fff;\n  font-size: 30px;\n  font-weight: bold;\n\n  background-color: #f2a663;\n\n  cursor: pointer;\n\n  &.on {\n    background-color: #d99559;\n    color: #e6e1e1;\n  }\n`;\n","import React, { useState } from 'react';\nimport history from '../../utils/browserHistory';\n\nimport { createPost } from '../../container/post';\n\nimport {\n  PostWritePage,\n  CancelBtn,\n  PostWriteBox,\n  PostInfoBox,\n  InputImage,\n  InputBox,\n  Input,\n  WriteBtn,\n} from './style';\n\nfunction PostWrite() {\n  const [postField, setPostField] = useState({\n    title: '',\n    content: '',\n    totalPrice: '',\n    nanumPrice: '',\n    minParti: '',\n    maxParti: '',\n    chatUrl: '',\n  });\n\n  const {\n    title,\n    content,\n    totalPrice,\n    nanumPrice,\n    minParti,\n    maxParti,\n    chatUrl,\n  } = postField;\n\n  const changeState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setPostField({\n      ...postField,\n      [name]: value,\n    });\n  };\n\n  const onClickWriteBtn = async function (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    const target = e.currentTarget;\n    target.disabled = true;\n    target.classList.add('on');\n\n    const res = await createPost({\n      title,\n      content,\n      totalPrice: Number(totalPrice),\n      nanumPrice: Number(nanumPrice),\n      minParti: Number(minParti),\n      maxParti: Number(maxParti),\n      chatUrl,\n    });\n\n    if (res?.success === false) {\n      alert(res.msg);\n      return;\n    }\n\n    setPostField({\n      title: '',\n      content: '',\n      totalPrice: '',\n      nanumPrice: '',\n      minParti: '',\n      maxParti: '',\n      chatUrl: '',\n    });\n\n    target.disabled = false;\n    target.classList.remove('on');\n\n    alert(res?.msg);\n    history.push('/main');\n  };\n\n  return (\n    <PostWritePage>\n      <PostWriteBox>\n        <CancelBtn onClick={() => history.push('/main')}>뒤로가기</CancelBtn>\n        <PostInfoBox>\n          <InputImage onClick={() => alert('...')}>이미지 업로드</InputImage>\n          <InputBox>\n            <Input\n              name=\"title\"\n              placeholder=\"제목\"\n              value={title}\n              onChange={changeState}\n            />\n            <Input\n              name=\"content\"\n              placeholder=\"내용\"\n              value={content}\n              onChange={changeState}\n              style={{ height: '90px' }}\n            />\n            <Input\n              name=\"totalPrice\"\n              placeholder=\"총 가격\"\n              value={totalPrice}\n              onChange={changeState}\n            />\n            <Input\n              name=\"nanumPrice\"\n              placeholder=\"나눔가\"\n              value={nanumPrice}\n              onChange={changeState}\n            />\n            <Input\n              name=\"minParti\"\n              placeholder=\"최소인원\"\n              value={minParti}\n              onChange={changeState}\n            />\n            <Input\n              name=\"maxParti\"\n              placeholder=\"최대인원\"\n              value={maxParti}\n              onChange={changeState}\n            />\n            <Input\n              name=\"chatUrl\"\n              placeholder=\"체팅방 링크\"\n              value={chatUrl}\n              onChange={changeState}\n            />\n          </InputBox>\n        </PostInfoBox>\n        <WriteBtn type=\"button\" onClick={onClickWriteBtn}>\n          나누기 개설\n        </WriteBtn>\n      </PostWriteBox>\n    </PostWritePage>\n  );\n}\n\nexport default PostWrite;\n","import { makeAutoObservable } from \"mobx\";\nimport { User } from \"./index\";\n\nclass UserStore {\n    profile: User | null = null\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n}\n\n\nexport const userStore = new UserStore()","import callApi from '../../utils/api'\n\nexport type getProfileRes = {\n    data: User\n}\n\nexport interface User {\n    name: string\n    uid: string\n}\n\nexport const fetchProfile = async () => {\n    const res = await callApi.get<{}, getProfileRes>('users/me')\n    return res\n}","import React, { useEffect } from 'react'\nimport {\n  Avatar,\n  Container,\n  Divider,\n  Grid,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography\n} from '@material-ui/core'\nimport { observer } from 'mobx-react-lite'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport MyLocationIcon from '@material-ui/icons/MyLocation'\nimport InfoIcon from '@material-ui/icons/Info'\nimport HelpIcon from '@material-ui/icons/Help'\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer'\nimport LogOutIcon from '@material-ui/icons/ExitToApp'\nimport ResignIcon from '@material-ui/icons/MeetingRoom'\nimport { useHistory } from 'react-router-dom'\nimport { userStore } from '../../container/user/store'\nimport { fetchProfile } from '../../container/user'\n\nconst MyPage = observer(() => {\n  const history = useHistory()\n\n  useEffect(() => {\n    fetchProfile().then((p) => {\n      userStore.profile = p?.data ?? null\n    })\n  }, [])\n\n  return (\n    <Container maxWidth='sm'>\n      <Grid container spacing={1} alignItems='center'>\n        <Grid item>\n          <Avatar>{userStore.profile?.name?.[0] ?? 'N'}</Avatar>\n        </Grid>\n        <Grid item>\n          <Typography variant='h6'>\n            {userStore.profile?.uid ?? '(알 수 없음)'}\n          </Typography>\n          <Typography variant='subtitle1'>\n            {userStore.profile?.name ?? '(알 수 없음)'} 님 반갑습니다\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4} aria-colcount={3} justify='center'>\n        <Grid item justify='center'>\n          <Avatar>\n            1\n          </Avatar>\n          <Typography variant='subtitle2'>나눔 내역</Typography>\n        </Grid>\n        <Grid item justify='center'>\n          <Avatar>\n            2\n          </Avatar>\n          <Typography variant='subtitle2'>참여 내역</Typography>\n        </Grid>\n        <Grid item justify='center'>\n          <Avatar>\n            3\n          </Avatar>\n          <Typography variant='subtitle2' align='center'>관심 목록</Typography>\n        </Grid>\n      </Grid>\n      <Divider />\n      <ListItem button>\n        <ListItemIcon>\n          <MyLocationIcon />\n        </ListItemIcon>\n        <ListItemText primary='내 동네 설정' />\n      </ListItem>\n      <ListItem button>\n        <ListItemIcon>\n          <NotificationsIcon />\n        </ListItemIcon>\n        <ListItemText primary='키워드 알림' />\n      </ListItem>\n      <Divider />\n      <ListItem\n        button\n        onClick={() => history.push('/policies')}\n      >\n        <ListItemIcon>\n          <InfoIcon />\n        </ListItemIcon>\n        <ListItemText primary='이용약관' />\n      </ListItem>\n      <ListItem button>\n        <ListItemIcon>\n          <HelpIcon />\n        </ListItemIcon>\n        <ListItemText primary='자주 묻는 질문' />\n      </ListItem>\n      <ListItem\n        button\n        onClick={() => history.push('/cs')}\n      >\n        <ListItemIcon>\n          <QuestionAnswerIcon />\n        </ListItemIcon>\n        <ListItemText primary='1:1 문의' />\n      </ListItem>\n      <Divider />\n      <ListItem\n        button\n        onClick={() => {\n          if (confirm('로그아웃하시겠습니까?')) {\n            // TODO: 로그아웃 기능 구현\n          }\n        }}\n      >\n        <ListItemIcon>\n          <LogOutIcon />\n        </ListItemIcon>\n        <ListItemText primary='로그아웃' />\n      </ListItem>\n      <ListItem\n        button\n        onClick={() => {\n          if (confirm('로그아웃하시겠습니까?')) {\n            // TODO: 회원탈퇴 기능 구현\n          }\n        }}\n      >\n        <ListItemIcon>\n          <ResignIcon />\n        </ListItemIcon>\n        <ListItemText primary='회원탈퇴' />\n      </ListItem>\n    </Container>\n  )\n})\n\nexport default MyPage","import styled from 'styled-components';\n\nimport { Page } from '../common';\n\nexport const EnptyPage = styled.div`\n  ${Page}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  background-color: #f7c46a;\n`;\n\nexport const ErrorCodeText = styled.div`\n  color: #f9765a;\n\n  opacity: 0.5;\n  font-size: 30px;\n`;\n\nexport const HmmText = styled.div`\n  color: #f9765a;\n\n  opacity: 0.5;\n  font-size: 300px;\n  font-weight: bold;\n`;\n","import React from 'react';\n\nimport { EnptyPage, ErrorCodeText, HmmText } from './style';\n\nfunction Empty() {\n  return (\n    <EnptyPage>\n      <ErrorCodeText>404</ErrorCodeText>\n      <HmmText>Hmm...</HmmText>\n    </EnptyPage>\n  );\n}\n\nexport default Empty;\n","import React from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\n\nimport callCookie from '../../utils/cookie';\nimport history from '../../utils/browserHistory';\nimport AuthRoute from './AuthRoute';\n\n// Route\nimport Signup from '../../pages/Signup';\nimport Login from '../../pages/Login';\nimport Find from '../../pages/Find';\nimport EmailVerification from '../../pages/EmailVerification';\nimport CustomerServicePage from '../../pages/CustomerService';\nimport PolicyPage from '../../pages/Policy';\n\n// AuthRoute\nimport Main from '../../pages/Main';\nimport Post from '../../pages/Post';\nimport PostWrite from '../../pages/PostWrite';\n\nimport MyPage from '../../pages/MyPage';\n// default\nimport Empty from '../../pages/Enpty';\n\nfunction Routes() {\n  const staySignedIn = callCookie.get('staySignedIn');\n  if (staySignedIn) callCookie.set('jwt', staySignedIn, 2);\n\n  return (\n    <Router history={history}>\n      <Switch>\n        {/* Route */}\n        <Route\n          exact\n          path=\"/\"\n          render={() => (staySignedIn ? <Main /> : <Login />)}\n        />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <Route\n          exact\n          path=\"/emailVerification/:code\"\n          component={EmailVerification}\n        />\n        <Route exact path=\"/find\" component={Find} />\n        <Route exact path=\"/policies\" component={PolicyPage} />\n\n        {/* AuthRoute */}\n        <AuthRoute exact path=\"/main\" component={Main} />\n        <AuthRoute exact path=\"/post/:id\" component={Post} />\n        <AuthRoute exact path=\"/write/post\" component={PostWrite} />\n\n        <AuthRoute exact path=\"/mypage\" component={MyPage} />\n        <AuthRoute exact path=\"/cs\" component={CustomerServicePage} />\n\n        <Route component={Empty} />\n      </Switch>\n    </Router>\n  );\n}\nexport default Routes;\n","import React from 'react';\n\nimport { GlobalStyles } from './style';\n\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Routes />\n    </>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}