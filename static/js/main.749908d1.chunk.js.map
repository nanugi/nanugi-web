{"version":3,"sources":["utils/cookie.ts","utils/browserHistory.ts","App/Routes/AuthRoute.tsx","utils/api.ts","container/sign/index.ts","pages/pageStyle.tsx","pages/Signup/style.ts","pages/Signup/index.tsx","pages/Login/style.ts","pages/Login/index.tsx","pages/EmailVerification/style.ts","pages/EmailVerification/index.tsx","pages/Main/style.ts","pages/Main/index.tsx","pages/Enpty/style.ts","pages/Enpty/index.tsx","App/Routes/index.tsx","App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["name","date","Date","document","cookie","toUTCString","value","day","setTime","getTime","match","createBrowserHistory","basename","process","AuthRoute","component","path","exact","Boolean","callCookie","history","push","defaultProps","errorHandling","response","a","text","ok","status","responseText","Error","callFetch","url","method","body","undefined","jwt","init","headers","authorization","JSON","stringify","fetch","toJson","clone","json","callApiBase","serverUrl","indexOf","login","req","callApi","res","success","data","signup","emailVerification","code","Page","css","SignupPage","styled","div","Title","InputBox","Input","input","LinkBox","LoginLink","FindLink","SignupBtn","button","AfterSignupBox","AfterSignupText","AfterSignupSubText","LoginLinkBtn","Signup","useState","email","password","rPassword","signupField","setSignupField","afterSignup","setAfterSignup","changeState","e","target","targetName","onClickSignupBtn","currentTarget","disabled","classList","add","alert","remove","id","msg","style","fontSize","type","onClick","autoComplete","placeholder","onChange","LoginPage","SignupLink","LoginBtn","Login","loginField","setLoginField","onClickLoginBtn","useEffect","EmailVerificationPage","ContentsBox","Filter","props","opacity","SlothVideo","video","Btn","TypingEffect","check","callback","time","useRef","ref","handleRef","texts","clearTimeout","current","typeWriter","char","length","charAt","innerHTML","setTimeout","color","BackgroundGif","loop","autoPlay","muted","src","EmailVerification","btnVisible","setBtnVisible","afterVerification","setAfterVerification","useParams","useMemo","replace","MainPage","SubText","Text","Main","EnptyPage","ErrorCodeText","HmmText","Empty","Routes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.749908d1.chunk.js","sourcesContent":["export default {\n  delete: (name: string): void => {\n    const date = new Date();\n    document.cookie = `${name}= ;expires=${date.toUTCString()};path=/`;\n  },\n  set: (name: string, value = 'none', day = 0): void => {\n    const date = new Date();\n    date.setTime(date.getTime() + day * 60 * 60 * 24 * 1000);\n    document.cookie = `${name}=${value};expires=${date.toUTCString()};path=/`;\n  },\n  get: (name: string): string => {\n    const value = document.cookie.match(`(^|;) ?${name}=([^;]*)(;|$)`);\n\n    return value ? value[2] : '';\n  },\n};\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({\n  basename: process.env.PUBLIC_URL,\n});\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport callCookie from '../../utils/cookie';\n\nimport history from '../../utils/browserHistory';\n\ninterface authRouteProps {\n  component: () => JSX.Element;\n  path: string | [string];\n  exact?: boolean;\n}\n\nconst AuthRoute = ({ component, path, exact }: authRouteProps) => {\n  const isLogin = Boolean(callCookie.get('jwt'));\n\n  if (!isLogin) history.push('/login');\n\n  return <Route path={path} exact={exact} component={component} />;\n};\n\nAuthRoute.defaultProps = { exact: false };\n\nexport default AuthRoute;\n","import history from './browserHistory';\nimport callCookie from './cookie';\n\ntype fetchMethod = 'get' | 'post' | 'put' | 'delete' | 'PATCH';\n\ninterface networkMessage {\n  code: number;\n  success: boolean;\n  msg: string;\n}\n\nconst errorHandling = async function (response: Response): Promise<boolean> {\n  const { text, ok, status } = response;\n\n  if (!ok) {\n    if (status === 401) {\n      callCookie.delete('jwt');\n      history.push('/login');\n      return ok;\n    }\n\n    const responseText = await text();\n    throw new Error(`Internal error : ${responseText}`);\n  }\n\n  return ok;\n};\nconst callFetch = function <I>(\n  url: string,\n  method: fetchMethod,\n  body: I | undefined = undefined,\n): Promise<Response> {\n  const jwt = callCookie.get('jwt');\n\n  const init: RequestInit = {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: jwt || '',\n    },\n    method,\n    body: method !== 'get' ? JSON.stringify(body) : undefined,\n  };\n  return fetch(url, init);\n};\nconst toJson = async function <O>(\n  response: Response,\n): Promise<O & networkMessage> {\n  let body: O & networkMessage;\n\n  try {\n    body = await response.clone().json();\n  } catch (err) {\n    const responseText = await response.text();\n    throw new Error(`Error converting to json : ${responseText}`);\n  }\n\n  return body;\n};\nconst callApiBase = async function <I, O>(\n  url: string,\n  method: fetchMethod,\n  body: I | undefined = undefined,\n): Promise<(O & networkMessage) | undefined> {\n  let serverUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n  if (url.indexOf('http://') !== -1 || url.indexOf('https://') !== -1)\n    serverUrl = '';\n\n  const response: Response = await callFetch<I>(\n    `${serverUrl}${url}`,\n    method,\n    body,\n  );\n\n  const ok = await errorHandling(response);\n\n  if (ok) return toJson<O>(response);\n\n  // console.log('Available after login');\n  return undefined;\n};\n\nexport default {\n  get: <I, O>(url: string): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'get'),\n  post: <I, O>(\n    url: string,\n    body: I,\n  ): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'post', body),\n  put: <I, O>(\n    url: string,\n    body: I,\n  ): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'put', body),\n  delete: <I, O>(\n    url: string,\n    body: I,\n  ): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'delete', body),\n\n  patch: <I, O>(\n    url: string,\n    body: I,\n  ): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'PATCH', body),\n};\n","import callApi from '../../utils/api';\nimport callCookie from '../../utils/cookie';\n\n// login\nexport type loginReq = {\n  id: string;\n  password: String;\n};\nexport type loginRes = {\n  data: string;\n};\nexport const login = async function (req: loginReq) {\n  const res = await callApi.post<loginReq, loginRes>('signin', req);\n  if (res?.success) {\n    callCookie.set('jwt', res.data, 2);\n  }\n  return res;\n};\n\n// signup\nexport type signupReq = {\n  id: string;\n  name: string;\n  password: string;\n};\nexport type signupRes = {\n  data: string;\n};\nexport const signup = async function (req: signupReq) {\n  const res = await callApi.post<signupReq, signupRes>('signup', req);\n  return res;\n};\n\n// email-verification\nexport const emailVerification = async (code: string) => {\n  const res = await callApi.get(`email-verification?code=${code}`);\n  return res;\n};\n","import { css } from 'styled-components';\n\nconst Page = css`\n  width: 80vw;\n  height: 80vh;\n\n  padding: 10vh 10vw;\n\n  overflow: hidden;\n`;\n\nexport default Page;\n","import styled from 'styled-components';\n\nimport Page from '../pageStyle';\n\nexport const SignupPage = styled.div`\n  ${Page}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: #fdc86d;\n`;\n\nexport const Title = styled.div`\n  font-size: 10vw;\n  font-weight: bold;\n\n  color: #f9765a;\n\n  opacity: 0.5;\n\n  user-select: none;\n`;\n\nexport const InputBox = styled.div`\n  display: flex;\n\n  flex-direction: column;\n  align-items: center;\n\n  width: 420px;\n\n  // background-color: #FFF;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 8px;\n\n  border: solid 1px #dadada;\n  border-radius: 6px;\n\n  padding-left: 10px;\n\n  width: 90%;\n  height: 45px;\n\n  font-size: 16px;\n\n  background: #fffafa;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const InputName = styled.div`\n  display: inline-flex;\n\n  width: 15%;\n  margin-right: 3%;\n\n  color: #fffafa;\n`;\n\nexport const LinkBox = styled.div`\n  display: flex;\n\n  margin-top: 10px;\n\n  padding: 0px 12px;\n\n  width: 420px;\n\n  color: gray;\n\n  box-sizing: border-box;\n`;\n\nexport const LoginLink = styled.div`\n  color: #0c0000;\n  opacity: 0.6;\n\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const FindLink = styled.div`\n  margin-left: auto;\n\n  color: #0c0000;\n  opacity: 0.6;\n\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const SignupBtn = styled.button`\n  margin-top: 60px;\n\n  border: none;\n  border-radius: 12px;\n\n  width: 420px;\n  height: 100px;\n\n  color: #fffafa;\n  font-size: 50px;\n  font-weight: bold;\n\n  background-color: #f2a663;\n\n  cursor: pointer;\n\n  &.on {\n    background-color: #d99559;\n    color: #e6e1e1;\n  }\n`;\n\nexport const AfterSignupBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 500px;\n`;\nexport const AfterSignupText = styled.div`\n  margin-bottom: 40px;\n\n  font-size: 50px;\n  font-weight: bold;\n`;\nexport const AfterSignupSubText = styled.div`\n  font-size: 20px;\n`;\n\nexport const LoginLinkBtn = styled.button`\n  margin-top: 100px;\n\n  border: none;\n  border-radius: 12px;\n\n  width: 220px;\n  height: 60px;\n\n  color: #fffafa;\n  font-size: 25px;\n  font-weight: bold;\n\n  background-color: #f2a663;\n\n  cursor: pointer;\n\n  &.on {\n    background-color: #d99559;\n    color: #e6e1e1;\n  }\n`;\n","import React, { useState } from 'react';\nimport history from '../../utils/browserHistory';\n\nimport { signup } from '../../container/sign';\n\nimport {\n  SignupPage,\n  Title,\n  InputBox,\n  Input,\n  LoginLink,\n  FindLink,\n  SignupBtn,\n  LinkBox,\n  AfterSignupBox,\n  AfterSignupText,\n  AfterSignupSubText,\n  LoginLinkBtn,\n} from './style';\n\nfunction Signup() {\n  const [signupField, setSignupField] = useState({\n    email: '',\n    password: '',\n    rPassword: '',\n    name: '',\n  });\n  const [afterSignup, setAfterSignup] = useState(false);\n\n  const { email, password, rPassword, name } = signupField;\n\n  const changeState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName, value } = e.target;\n\n    setSignupField({\n      ...signupField,\n      [targetName]: value,\n    });\n  };\n\n  const onClickSignupBtn = async function (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    const target = e.currentTarget;\n    target.disabled = true;\n    target.classList.add('on');\n\n    if (password === rPassword) {\n      alert('비밀번호 두 개가 다릅니다.');\n      target.disabled = false;\n      target.classList.remove('on');\n      return;\n    }\n\n    const res = await signup({\n      id: email,\n      password,\n      name,\n    });\n\n    setSignupField({\n      email: '',\n      password: '',\n      rPassword: '',\n      name: '',\n    });\n    target.disabled = false;\n    target.classList.remove('on');\n\n    if (res?.success) {\n      alert(res?.msg);\n      return;\n    }\n\n    // alert('회원가입이 되었습니다.');\n    // history.push('/login');\n\n    // 이메일 확인해달라는 문구 작성하기\n    setAfterSignup(true);\n  };\n\n  return (\n    <SignupPage>\n      <Title>%</Title>\n\n      {afterSignup ? (\n        <div>\n          <AfterSignupBox>\n            <AfterSignupText>가입을 축하 드립니다.</AfterSignupText>\n            <AfterSignupText style={{ fontSize: '30px' }}>\n              &apos;{email}&apos; 로 이메일을 전송하였습니다.\n            </AfterSignupText>\n            <AfterSignupSubText>이메일 인증을 완료하고,</AfterSignupSubText>\n            <AfterSignupSubText>\n              나누기와 함께 친환경 공유소비 생활을 즐겨보아요!\n            </AfterSignupSubText>\n            <LoginLinkBtn type=\"button\" onClick={() => history.push('/login')}>\n              로그인화면으로\n            </LoginLinkBtn>\n          </AfterSignupBox>\n        </div>\n      ) : (\n        <div>\n          <InputBox>\n            <Input\n              autoComplete=\"off\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              value={email}\n              onChange={changeState}\n            />\n            <Input\n              autoComplete=\"off\"\n              name=\"name\"\n              placeholder=\"Name\"\n              value={name}\n              onChange={changeState}\n            />\n            <Input\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={changeState}\n            />\n            <Input\n              name=\"rPassword\"\n              placeholder=\"Reenter password\"\n              type=\"password\"\n              value={rPassword}\n              onChange={changeState}\n            />\n          </InputBox>\n          <LinkBox>\n            <LoginLink onClick={() => history.push('/login')}>로그인</LoginLink>\n            <FindLink onClick={() => history.push('/find')}>\n              아이디 / 비밀번호 찾기\n            </FindLink>\n          </LinkBox>\n          <SignupBtn type=\"button\" onClick={onClickSignupBtn}>\n            회원가입\n          </SignupBtn>\n        </div>\n      )}\n    </SignupPage>\n  );\n}\n\nexport default Signup;\n","import styled from 'styled-components';\n\nimport Page from '../pageStyle';\n\nexport const LoginPage = styled.div`\n  ${Page}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: #f7c46a;\n`;\n\nexport const Title = styled.div`\n  font-size: 15vw;\n  font-weight: bold;\n\n  color: #f9765a;\n\n  opacity: 0.5;\n\n  user-select: none;\n`;\n\nexport const InputBox = styled.div`\n  display: flex;\n\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 12px;\n\n  width: 420px;\n\n  // background-color: #FFF;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 8px;\n\n  border: solid 1px #dadada;\n  border-radius: 6px;\n\n  padding-left: 10px;\n\n  width: 90%;\n  height: 45px;\n\n  font-size: 16px;\n\n  background: #fffafa;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const InputName = styled.div`\n  display: inline-flex;\n\n  width: 15%;\n  margin-right: 3%;\n\n  color: #fffafa;\n`;\n\nexport const LinkBox = styled.div`\n  display: flex;\n\n  margin-top: 10px;\n\n  padding: 0px 12px;\n\n  width: 420px;\n\n  color: gray;\n\n  box-sizing: border-box;\n`;\n\nexport const SignupLink = styled.div`\n  color: #0c0000;\n  opacity: 0.6;\n\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const FindLink = styled.div`\n  margin-left: auto;\n\n  color: #0c0000;\n  opacity: 0.6;\n\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const LoginBtn = styled.button`\n  margin-top: 60px;\n\n  border: none;\n  border-radius: 12px;\n\n  width: 420px;\n  height: 100px;\n\n  color: #fffafa;\n  font-size: 50px;\n  font-weight: bold;\n\n  background-color: #f2a663;\n\n  cursor: pointer;\n\n  &.on {\n    background-color: #d99559;\n    color: #e6e1e1;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport callCookie from '../../utils/cookie';\nimport history from '../../utils/browserHistory';\n\nimport { login } from '../../container/sign';\n\nimport {\n  LoginPage,\n  Title,\n  InputBox,\n  Input,\n  LinkBox,\n  SignupLink,\n  FindLink,\n  LoginBtn,\n} from './style';\n\nfunction Login() {\n  const [loginField, setLoginField] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = loginField;\n\n  const changeState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setLoginField({\n      ...loginField,\n      [name]: value,\n    });\n  };\n\n  const onClickLoginBtn = async function (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    const target = e.currentTarget;\n    target.disabled = true;\n    target.classList.add('on');\n\n    const res = await login({ id: email, password });\n\n    setLoginField({\n      email: '',\n      password: '',\n    });\n    target.disabled = false;\n    target.classList.remove('on');\n\n    if (res?.success) {\n      alert(res.msg);\n      return;\n    }\n\n    history.push('/main');\n  };\n\n  useEffect(() => {\n    callCookie.delete('jwt');\n  }, []);\n\n  return (\n    <LoginPage>\n      <Title>%</Title>\n\n      <div>\n        <InputBox>\n          <Input\n            autoComplete=\"off\"\n            name=\"email\"\n            placeholder=\"E-mail\"\n            value={email}\n            onChange={changeState}\n          />\n          <Input\n            name=\"password\"\n            placeholder=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={changeState}\n          />\n        </InputBox>\n        <LinkBox>\n          <SignupLink onClick={() => history.push('/signup')}>\n            회원가입\n          </SignupLink>\n          <FindLink onClick={() => history.push('/find')}>\n            아이디 / 비밀번호 찾기\n          </FindLink>\n        </LinkBox>\n\n        <LoginBtn type=\"button\" onClick={onClickLoginBtn}>\n          로그인\n        </LoginBtn>\n      </div>\n    </LoginPage>\n  );\n}\n\nexport default Login;\n","import styled from 'styled-components';\n\nexport const EmailVerificationPage = styled.div`\n  width: 100vw;\n  height: 100vh;\n\n  overflow: hidden;\n`;\n\nexport const ContentsBox = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100vw;\n  height: 100vh;\n\n  z-index: 1000;\n`;\n\nexport const Filter = styled.div<{ opacity: number }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: ${(props) => `rgba(0, 0, 0, ${props.opacity})`};\n\n  z-index: 100;\n`;\n\nexport const SlothVideo = styled.video`\n  position: relative;\n  top: -18%;\n\n  height: calc(100vh + 36%);\n`;\n\nexport const Btn = styled.div`\n  color: #fff;\n  font-size: 20px;\n\n  height: 40px;\n\n  transition: all 0.2s;\n\n  cursor: pointer;\n\n  &:hover {\n    font-size: 22px;\n  }\n`;\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport history from '../../utils/browserHistory';\nimport {\n  EmailVerificationPage,\n  ContentsBox,\n  Filter,\n  SlothVideo,\n  Btn,\n} from './style';\n\nimport { emailVerification } from '../../container/sign';\n\ninterface typingEffectProps {\n  check: boolean;\n  callback: () => void;\n}\nconst TypingEffect = ({ check, callback }: typingEffectProps) => {\n  const time = useRef(0);\n  const ref = useRef({} as HTMLHeadingElement);\n  const handleRef = useRef({} as NodeJS.Timeout);\n\n  // console.log('TypingEffect : ', check);\n\n  useEffect(() => {\n    const texts = ['...확인..', '되셨습니다..'];\n    const between = '.';\n    const speed = 800;\n\n    clearTimeout(handleRef.current);\n\n    const typeWriter = () => {\n      // console.log(`time: ${time.current}, check: ${check}`);\n\n      let step = -1;\n      if (texts[0].length > time.current) step = 0;\n      else if (!check) step = 1;\n      else step = 2;\n\n      let char = '';\n      switch (step) {\n        case 0:\n          char = texts[0].charAt(time.current);\n          time.current += 1;\n          break;\n        case 1:\n          char = between;\n          break;\n        case 2:\n          char = texts[1].charAt(time.current - texts[0].length);\n          time.current += 1;\n          break;\n        default:\n      }\n\n      // console.log(`step: ${step}, char: ${char}`);\n\n      ref.current.innerHTML += char;\n      if (time.current <= texts[0].length + texts[1].length)\n        handleRef.current = setTimeout(typeWriter, speed);\n      else callback();\n    };\n    typeWriter();\n  }, [check, callback]);\n\n  return (\n    <h1 ref={ref} style={{ fontSize: 100, color: '#FFFFFF' }}>\n      {/* TypingEffect Text */}\n    </h1>\n  );\n};\n\nconst BackgroundGif = () => (\n  <SlothVideo loop autoPlay muted>\n    <source\n      src=\"https://thumbs.gfycat.com/AdventurousPointlessGull-mobile.webm\"\n      type=\"video/webm\"\n    />\n    <source\n      src=\"https://thumbs.gfycat.com/AdventurousPointlessGull-mobile.mp4\"\n      type=\"video/mp4\"\n    />\n  </SlothVideo>\n);\n\nconst EmailVerification = () => {\n  const [btnVisible, setBtnVisible] = useState(false);\n  const [afterVerification, setAfterVerification] = useState(false);\n  const { code } = useParams<{ code: string }>();\n\n  const init = useMemo(\n    () =>\n      async function () {\n        const res = await emailVerification(code);\n        if (res?.success) setAfterVerification(true);\n      },\n    [code],\n  );\n\n  useEffect(() => {\n    init();\n  }, [init]);\n\n  return (\n    <>\n      <EmailVerificationPage>\n        <ContentsBox>\n          <TypingEffect\n            check={afterVerification}\n            callback={() => {\n              setBtnVisible(true);\n            }}\n          />\n          {btnVisible ? (\n            <Btn onClick={() => history.replace('/')}>로그인하러 가기</Btn>\n          ) : (\n            <></>\n          )}\n        </ContentsBox>\n\n        <BackgroundGif />\n\n        <Filter opacity={btnVisible ? 0.8 : 0.7} />\n      </EmailVerificationPage>\n    </>\n  );\n};\n\nexport default EmailVerification;\n","import styled from 'styled-components';\n\nimport Page from '../pageStyle';\n\nexport const MainPage = styled.div`\n  ${Page}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  background-color: #f7c46a;\n`;\n\nexport const SubText = styled.div`\n  color: #f9765a;\n\n  opacity: 0.5;\n  font-size: 30px;\n`;\n\nexport const Text = styled.div`\n  color: #f9765a;\n\n  opacity: 0.5;\n  font-size: 200px;\n  font-weight: bold;\n`;\n","import React from 'react';\nimport { MainPage, SubText, Text } from './style';\n\nfunction Main() {\n  return (\n    <MainPage>\n      <SubText>제작중..</SubText>\n      <Text>메인 페이지</Text>\n    </MainPage>\n  );\n}\n\nexport default Main;\n","import styled from 'styled-components';\n\nimport Page from '../pageStyle';\n\nexport const EnptyPage = styled.div`\n  ${Page}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  background-color: #f7c46a;\n`;\n\nexport const ErrorCodeText = styled.div`\n  color: #f9765a;\n\n  opacity: 0.5;\n  font-size: 30px;\n`;\n\nexport const HmmText = styled.div`\n  color: #f9765a;\n\n  opacity: 0.5;\n  font-size: 300px;\n  font-weight: bold;\n`;\n","import React from 'react';\n\nimport { EnptyPage, ErrorCodeText, HmmText } from './style';\n\nfunction Empty() {\n  return (\n    <EnptyPage>\n      <ErrorCodeText>404</ErrorCodeText>\n      <HmmText>Hmm...</HmmText>\n    </EnptyPage>\n  );\n}\n\nexport default Empty;\n","import React from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\n\nimport AuthRoute from './AuthRoute';\nimport history from '../../utils/browserHistory';\n\n// Route\nimport Signup from '../../pages/Signup';\nimport Login from '../../pages/Login';\nimport EmailVerification from '../../pages/EmailVerification';\n\n// AuthRoute\nimport Main from '../../pages/Main';\n\n// default\nimport Empty from '../../pages/Enpty';\n\nconst Routes = () => (\n  <Router history={history}>\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <Route path=\"/emailVerification/:code\" component={EmailVerification} />\n\n      <AuthRoute exact path=\"/main\" component={Main} />\n      {/* <Route exact path=\"/main\" component={Main} /> */}\n\n      <Route component={Empty} />\n    </Switch>\n  </Router>\n);\n\nexport default Routes;\n","import React from 'react';\n\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n    </>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}