{"version":3,"sources":["utils/cookie.ts","utils/browserHistory.ts","App/Routes/AuthRoute.tsx","utils/api.ts","container/sign/index.ts","pages/pageStyle.tsx","pages/Signup/style.ts","pages/Signup/index.tsx","pages/Login/style.ts","pages/Login/index.tsx","pages/Find/style.ts","pages/Find/index.tsx","pages/EmailVerification/style.ts","pages/EmailVerification/index.tsx","pages/Post/style.ts","pages/Post/index.tsx","container/post/index.ts","pages/Main/style.ts","pages/Main/index.tsx","pages/Enpty/style.ts","pages/Enpty/index.tsx","App/Routes/index.tsx","App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["name","date","Date","document","cookie","toUTCString","value","day","setTime","getTime","match","createBrowserHistory","basename","process","AuthRoute","component","path","exact","Boolean","callCookie","history","push","defaultProps","callFetch","url","method","body","undefined","jwt","init","headers","JSON","stringify","fetch","toJson","response","a","clone","json","text","responseText","Error","callApiBase","serverUrl","indexOf","login","isStaySignedIn","req","callApi","res","success","data","signup","emailVerification","code","sendCertcode","setNewPassword","Page","css","SignupPage","styled","div","Title","InputBox","Input","input","LinkBox","LoginLink","FindLink","SignupBtn","button","AfterSignupBox","AfterSignupText1","AfterSignupText2","AfterSignupText3","LoginLinkBtn","Signup","useState","email","password","rPassword","signupField","setSignupField","afterSignup","setAfterSignup","changeState","e","target","targetName","onClickSignupBtn","currentTarget","disabled","classList","add","alert","remove","id","msg","className","type","onClick","autoComplete","placeholder","onChange","LoginPage","StaySignedInBox","StaySignedInBtn","StaySignedInLabel","SignupLink","LoginBtn","Login","setIsStaySignedIn","loginField","setLoginField","onClickLoginBtn","useEffect","FindPage","Box","Text","Btn","Find","findField","setFindField","afterSendingCode","setAfterSendingCode","afterSetNewPassword","setAfterSetNewPassword","onClickSendCodeBtn","onClickSetNewPasswordBtn","EmailVerificationPage","ContentsBox","Filter","props","opacity","TypingEffectText","h1","SlothVideo","video","texts","TypingEffect","check","callback","time","useRef","ref","handleRef","clearTimeout","current","typeWriter","char","length","charAt","innerHTML","setTimeout","BackgroundGif","loop","autoPlay","muted","playsInline","src","EmailVerification","btnVisible","setBtnVisible","afterVerification","setAfterVerification","useParams","useMemo","replace","PostPage","PostImage","Post","propsPost","location","state","post","title","price","content","chatUrl","user","minParti","maxParti","createdAt","getPosts","page","MainPage","PostUl","ul","PostLi","li","PostBox","PostInfo","PostTitle","Main","posts","setPosts","currentPageInfo","setCurrentPageInfo","nextPage","useCallback","next","alreadyImportedPosts_id","map","post_id","newPosts","filter","includes","onScroll","offsetHeight","scrollHeight","scrollTop","pathname","EnptyPage","ErrorCodeText","HmmText","Empty","Routes","render","staySignedIn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d5e961f.chunk.js","sourcesContent":["export default {\n  delete: (name: string): void => {\n    const date = new Date();\n    document.cookie = `${name}= ;expires=${date.toUTCString()};path=/`;\n  },\n  set: (name: string, value = 'none', day = 0): void => {\n    const date = new Date();\n    date.setTime(date.getTime() + day * 60 * 60 * 24 * 1000);\n    document.cookie = `${name}=${value};expires=${date.toUTCString()};path=/`;\n  },\n  get: (name: string): string => {\n    const value = document.cookie.match(`(^|;) ?${name}=([^;]*)(;|$)`);\n\n    return value ? value[2] : '';\n  },\n};\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({\n  basename: process.env.PUBLIC_URL,\n});\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport callCookie from '../../utils/cookie';\n\nimport history from '../../utils/browserHistory';\n\ninterface authRouteProps {\n  component: () => JSX.Element;\n  path: string | [string];\n  exact?: boolean;\n}\n\nconst AuthRoute = ({ component, path, exact }: authRouteProps) => {\n  const isLogin = Boolean(callCookie.get('jwt'));\n\n  if (!isLogin) history.push('/login');\n\n  return <Route path={path} exact={exact} component={component} />;\n};\n\nAuthRoute.defaultProps = { exact: false };\n\nexport default AuthRoute;\n","// import history from './browserHistory';\nimport callCookie from './cookie';\n\ntype fetchMethod = 'get' | 'post' | 'put' | 'delete' | 'PATCH';\n\ninterface networkMessage {\n  code: number;\n  success: boolean;\n  msg: string;\n}\n\n// const errorHandling = async function (response: Response): Promise<boolean> {\n//   const { clone, ok, status } = response;\n\n//   if (!ok) {\n//     if (status === 401) {\n//       callCookie.delete('jwt');\n//       history.push('/login');\n//       return ok;\n//     }\n\n//     const responseText = await clone().text();\n//     throw new Error(`Internal error : ${responseText}`);\n//   }\n\n//   return ok;\n// };\nconst callFetch = function <I>(\n  url: string,\n  method: fetchMethod,\n  body: I | undefined = undefined,\n): Promise<Response> {\n  const jwt = callCookie.get('jwt');\n\n  const init: RequestInit = {\n    headers: {\n      'Content-Type': 'application/json',\n      'X-AUTH-TOKEN': jwt || '',\n    },\n    method,\n    body: method !== 'get' ? JSON.stringify(body) : undefined,\n  };\n  return fetch(url, init);\n};\nconst toJson = async function <O>(\n  response: Response,\n): Promise<O & networkMessage> {\n  let body: O & networkMessage;\n  try {\n    body = await response.clone().json();\n  } catch (err) {\n    const responseText = await response.text();\n    throw new Error(`Error converting to json : ${responseText}`);\n  }\n\n  return body;\n};\nconst callApiBase = async function <I, O>(\n  url: string,\n  method: fetchMethod,\n  body: I | undefined = undefined,\n): Promise<(O & networkMessage) | undefined> {\n  let serverUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n  if (url.indexOf('http://') !== -1 || url.indexOf('https://') !== -1)\n    serverUrl = '';\n\n  const response: Response = await callFetch<I>(\n    `${serverUrl}${url}`,\n    method,\n    body,\n  );\n\n  // const ok = await errorHandling(response);\n\n  return toJson<O>(response);\n\n  // console.log('Available after login');\n  // return undefined;\n};\n\nexport default {\n  get: <I, O>(url: string): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'get'),\n  post: <I, O>(\n    url: string,\n    body: I,\n  ): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'post', body),\n  put: <I, O>(\n    url: string,\n    body: I,\n  ): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'put', body),\n  delete: <I, O>(\n    url: string,\n    body: I,\n  ): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'delete', body),\n\n  patch: <I, O>(\n    url: string,\n    body: I,\n  ): Promise<(O & networkMessage) | undefined> =>\n    callApiBase<I, O>(url, 'PATCH', body),\n};\n","import callApi from '../../utils/api';\nimport callCookie from '../../utils/cookie';\n\n// login\nexport type loginReq = {\n  id: string;\n  password: String;\n};\nexport type loginRes = {\n  data: string;\n};\nexport const login = async function (isStaySignedIn: boolean, req: loginReq) {\n  const res = await callApi.post<loginReq, loginRes>('signin', req);\n  if (res?.success) {\n    if (isStaySignedIn) callCookie.set('staySignedIn', res.data, 10000);\n    callCookie.set('jwt', res.data, 2);\n  }\n\n  return res;\n};\n\n// signup\nexport type signupReq = {\n  id: string;\n  name: string;\n  password: string;\n};\nexport type signupRes = {\n  data: string;\n};\nexport const signup = async function (req: signupReq) {\n  const res = await callApi.post<signupReq, signupRes>('signup', req);\n  return res;\n};\n\n// email-verification\nexport const emailVerification = async (code: string) => {\n  const res = await callApi.get<{}, {}>(`email-verification?code=${code}`);\n  return res;\n};\n\n// send-certcode\nexport type sendCertcodeReq = {\n  email: string;\n};\nexport const sendCertcode = async (req: sendCertcodeReq) => {\n  const res = await callApi.post<sendCertcodeReq, {}>('send-certcode', req);\n  return res;\n};\n\n// set-new-password\nexport type setNewPasswordReq = {\n  code: string;\n  password: string;\n};\nexport const setNewPassword = async (req: setNewPasswordReq) => {\n  const res = await callApi.post<setNewPasswordReq, {}>(\n    'set-new-password',\n    req,\n  );\n  return res;\n};\n","import { css } from 'styled-components';\n\nconst Page = css`\n  width: 80vw;\n  height: 80vh;\n\n  padding: 10vh 10vw;\n\n  overflow: hidden;\n`;\n\nexport default Page;\n","import styled from 'styled-components';\n\nimport Page from '../pageStyle';\n\nexport const SignupPage = styled.div`\n  ${Page}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: #fdc86d;\n`;\n\nexport const Title = styled.div`\n  font-size: clamp(50px, 10vw, 200px);\n  font-weight: bold;\n\n  color: #f9765a;\n\n  opacity: 0.5;\n\n  user-select: none;\n`;\n\nexport const InputBox = styled.div`\n  display: flex;\n\n  flex-direction: column;\n  align-items: center;\n\n  width: 90vw;\n  max-width: 420px;\n\n  // background-color: #FFF;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 8px;\n\n  border: solid 1px #dadada;\n  border-radius: 6px;\n\n  padding-left: 10px;\n\n  width: 90%;\n  height: 45px;\n\n  font-size: 16px;\n\n  background: #fffafa;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const InputName = styled.div`\n  display: inline-flex;\n\n  width: 15%;\n  margin-right: 3%;\n\n  color: #fffafa;\n`;\n\nexport const LinkBox = styled.div`\n  display: flex;\n\n  margin-top: 10px;\n\n  padding: 0px 12px;\n\n  width: 90vw;\n  max-width: 420px;\n\n  color: gray;\n\n  box-sizing: border-box;\n`;\n\nexport const LoginLink = styled.div`\n  color: #0c0000;\n  opacity: 0.6;\n\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const FindLink = styled.div`\n  margin-left: auto;\n\n  color: #0c0000;\n  opacity: 0.6;\n\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const SignupBtn = styled.button`\n  margin-top: 60px;\n\n  border: none;\n  border-radius: 12px;\n\n  width: 90vw;\n  max-width: 420px;\n  height: 100px;\n\n  color: #fffafa;\n  font-size: 50px;\n  font-weight: bold;\n\n  background-color: #f2a663;\n\n  cursor: pointer;\n\n  &.on {\n    background-color: #d99559;\n    color: #e6e1e1;\n  }\n`;\n\nexport const AfterSignupBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 500px;\n`;\nexport const AfterSignupText1 = styled.div`\n  margin-bottom: 40px;\n\n  font-size: clamp(30px, 10vw, 50px);\n  font-weight: bold;\n`;\nexport const AfterSignupText2 = styled.div`\n  font-size: clamp(23px, 4vw, 30px);\n  font-weight: bold;\n\n  &.last {\n    margin-bottom: 40px;\n  }\n`;\nexport const AfterSignupText3 = styled.div`\n  font-size: clamp(15px, 3vw, 20px);\n`;\n\nexport const LoginLinkBtn = styled.button`\n  margin-top: 100px;\n\n  border: none;\n  border-radius: 12px;\n\n  width: 220px;\n  height: 60px;\n\n  color: #fffafa;\n  font-size: 25px;\n  font-weight: bold;\n\n  background-color: #f2a663;\n\n  cursor: pointer;\n\n  &.on {\n    background-color: #d99559;\n    color: #e6e1e1;\n  }\n`;\n","import React, { useState } from 'react';\nimport history from '../../utils/browserHistory';\n\nimport { signup } from '../../container/sign';\n\nimport {\n  SignupPage,\n  Title,\n  InputBox,\n  Input,\n  LoginLink,\n  FindLink,\n  SignupBtn,\n  LinkBox,\n  AfterSignupBox,\n  AfterSignupText1,\n  AfterSignupText2,\n  AfterSignupText3,\n  LoginLinkBtn,\n} from './style';\n\nfunction Signup() {\n  const [signupField, setSignupField] = useState({\n    email: '',\n    password: '',\n    rPassword: '',\n    name: '',\n  });\n  const [afterSignup, setAfterSignup] = useState(false);\n\n  const { email, password, rPassword, name } = signupField;\n\n  const changeState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName, value } = e.target;\n\n    setSignupField({\n      ...signupField,\n      [targetName]: value,\n    });\n  };\n\n  const onClickSignupBtn = async function (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    const target = e.currentTarget;\n    target.disabled = true;\n    target.classList.add('on');\n\n    if (password !== rPassword) {\n      alert('비밀번호 두 개가 다릅니다.');\n      target.disabled = false;\n      target.classList.remove('on');\n      return;\n    }\n\n    const res = await signup({\n      id: email,\n      password,\n      name,\n    });\n\n    if (res?.success === false) {\n      alert(res?.msg);\n\n      setSignupField({\n        email: '',\n        password: '',\n        rPassword: '',\n        name: '',\n      });\n      target.disabled = false;\n      target.classList.remove('on');\n\n      return;\n    }\n\n    // alert('회원가입이 되었습니다.');\n    // history.push('/login');\n\n    // 이메일 확인해달라는 문구 작성하기\n    setAfterSignup(true);\n  };\n\n  return (\n    <SignupPage>\n      <Title>%</Title>\n\n      {afterSignup ? (\n        <AfterSignupBox>\n          <AfterSignupText1>가입을 축하 드립니다.</AfterSignupText1>\n          <AfterSignupText2>&apos;{email}&apos; 로</AfterSignupText2>\n          <AfterSignupText2 className=\"last\">\n            이메일을 전송하였습니다.\n          </AfterSignupText2>\n\n          <AfterSignupText3>이메일 인증을 완료하고,</AfterSignupText3>\n          <AfterSignupText3>\n            나누기와 함께 친환경 공유소비 생활을 즐겨보아요!\n          </AfterSignupText3>\n          <LoginLinkBtn type=\"button\" onClick={() => history.push('/login')}>\n            로그인화면으로\n          </LoginLinkBtn>\n        </AfterSignupBox>\n      ) : (\n        <div>\n          <InputBox>\n            <Input\n              autoComplete=\"off\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              value={email}\n              onChange={changeState}\n            />\n            <Input\n              autoComplete=\"off\"\n              name=\"name\"\n              placeholder=\"Name\"\n              value={name}\n              onChange={changeState}\n            />\n            <Input\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={changeState}\n            />\n            <Input\n              name=\"rPassword\"\n              placeholder=\"Reenter password\"\n              type=\"password\"\n              value={rPassword}\n              onChange={changeState}\n            />\n          </InputBox>\n          <LinkBox>\n            <LoginLink onClick={() => history.push('/login')}>로그인</LoginLink>\n            <FindLink onClick={() => history.push('/find')}>\n              비밀번호 찾기\n            </FindLink>\n          </LinkBox>\n          <SignupBtn type=\"button\" onClick={onClickSignupBtn}>\n            회원가입\n          </SignupBtn>\n        </div>\n      )}\n    </SignupPage>\n  );\n}\n\nexport default Signup;\n","import styled from 'styled-components';\n\nimport Page from '../pageStyle';\n\nexport const LoginPage = styled.div`\n  ${Page}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: #f7c46a;\n`;\n\nexport const Title = styled.div`\n  font-size: clamp(100px, 15vw, 250px);\n  font-weight: bold;\n\n  color: #f9765a;\n\n  opacity: 0.5;\n\n  user-select: none;\n`;\n\nexport const StaySignedInBox = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin-bottom: 10px;\n  padding-left: 4%;\n\n  cursor: pointer;\n`;\nexport const StaySignedInBtn = styled.button`\n  padding: 0px;\n  border: solid 1px #dadada;\n  margin-right: 8px;\n\n  width: 18px;\n  height: 18px;\n\n  line-height: 15px;\n  text-align: center;\n\n  color: #fff;\n  font-size: 15px;\n  font-weight: 900;\n\n  background-color: #fff;\n\n  transition: all 0.5s;\n\n  &:focus {\n    outline: none;\n  }\n  &.on {\n    border: none;\n    background-color: #f2a663;\n  }\n`;\nexport const StaySignedInLabel = styled.div`\n  font-size: 15px;\n`;\n\nexport const InputBox = styled.div`\n  display: flex;\n\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 12px;\n\n  width: 90vw;\n  max-width: 420px;\n\n  /* background-color: #fff; */\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 8px;\n\n  border: solid 1px #dadada;\n  border-radius: 6px;\n\n  padding-left: 10px;\n\n  width: 90%;\n  height: 45px;\n\n  font-size: 16px;\n\n  background: #fffafa;\n\n  &:focus {\n    outline: none;\n  }\n`;\nexport const LinkBox = styled.div`\n  display: flex;\n\n  margin-top: 10px;\n\n  padding: 0px 12px;\n\n  width: 90vw;\n  max-width: 420px;\n\n  color: gray;\n\n  box-sizing: border-box;\n`;\n\nexport const SignupLink = styled.div`\n  color: #0c0000;\n  opacity: 0.6;\n\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const FindLink = styled.div`\n  margin-left: auto;\n\n  color: #0c0000;\n  opacity: 0.6;\n\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const LoginBtn = styled.button`\n  margin-top: 60px;\n\n  border: none;\n  border-radius: 12px;\n\n  width: 90vw;\n  max-width: 420px;\n  height: 100px;\n\n  color: #fffafa;\n  font-size: 50px;\n  font-weight: bold;\n\n  background-color: #f2a663;\n\n  cursor: pointer;\n\n  &.on {\n    background-color: #d99559;\n    color: #e6e1e1;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport callCookie from '../../utils/cookie';\nimport history from '../../utils/browserHistory';\n\nimport { login } from '../../container/sign';\n\nimport {\n  LoginPage,\n  Title,\n  StaySignedInBox,\n  StaySignedInBtn,\n  StaySignedInLabel,\n  InputBox,\n  Input,\n  LinkBox,\n  SignupLink,\n  FindLink,\n  LoginBtn,\n} from './style';\n\nfunction Login() {\n  const [isStaySignedIn, setIsStaySignedIn] = useState(false);\n  const [loginField, setLoginField] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = loginField;\n\n  const changeState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setLoginField({\n      ...loginField,\n      [name]: value,\n    });\n  };\n\n  const onClickLoginBtn = async function (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    const target = e.currentTarget;\n    target.disabled = true;\n    target.classList.add('on');\n\n    const res = await login(isStaySignedIn, { id: email, password });\n    setLoginField({\n      email: '',\n      password: '',\n    });\n    target.disabled = false;\n    target.classList.remove('on');\n\n    if (res?.success === false) {\n      alert(res.msg);\n      return;\n    }\n\n    history.push('/main');\n  };\n\n  useEffect(() => {\n    callCookie.delete('staySignedIn');\n    callCookie.delete('jwt');\n  }, []);\n\n  return (\n    <LoginPage>\n      <Title>%</Title>\n\n      <div>\n        <StaySignedInBox\n          onClick={() => {\n            setIsStaySignedIn(!isStaySignedIn);\n          }}\n        >\n          <StaySignedInBtn type=\"button\" className={isStaySignedIn ? 'on' : ''}>\n            ✔\n          </StaySignedInBtn>\n          <StaySignedInLabel>로그인 상태 유지</StaySignedInLabel>\n        </StaySignedInBox>\n        <InputBox>\n          <Input\n            name=\"email\"\n            placeholder=\"E-mail\"\n            value={email}\n            onChange={changeState}\n          />\n          <Input\n            name=\"password\"\n            placeholder=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={changeState}\n          />\n        </InputBox>\n        <LinkBox>\n          <SignupLink onClick={() => history.push('/signup')}>\n            회원가입\n          </SignupLink>\n          <FindLink onClick={() => history.push('/find')}>\n            비밀번호 찾기\n          </FindLink>\n        </LinkBox>\n\n        <LoginBtn type=\"button\" onClick={onClickLoginBtn}>\n          로그인\n        </LoginBtn>\n      </div>\n    </LoginPage>\n  );\n}\n\nexport default Login;\n","import styled from 'styled-components';\n\nimport Page from '../pageStyle';\n\nexport const FindPage = styled.div`\n  ${Page}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  background-color: #f7c46a;\n`;\n\nexport const Title = styled.div`\n  font-size: clamp(100px, 15vw, 250px);\n  font-weight: bold;\n\n  color: #f9765a;\n\n  opacity: 0.5;\n\n  user-select: none;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 12px;\n\n  width: 90vw;\n  max-width: 420px;\n\n  /* background-color: #fff; */\n`;\n\nexport const InputBox = styled.div`\n  display: flex;\n\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 12px;\n\n  width: 90vw;\n  max-width: 420px;\n\n  /* background-color: #fff; */\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 8px;\n\n  border: solid 1px #dadada;\n  border-radius: 6px;\n\n  padding-left: 10px;\n\n  width: 90%;\n  height: 45px;\n\n  font-size: 16px;\n\n  background: #fffafa;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const LinkBox = styled.div`\n  display: flex;\n\n  margin-top: 10px;\n\n  padding: 0px 12px;\n\n  width: 90vw;\n  max-width: 420px;\n\n  color: gray;\n\n  box-sizing: border-box;\n`;\n\nexport const LoginLink = styled.div`\n  color: #0c0000;\n  opacity: 0.6;\n\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const SignupLink = styled.div`\n  margin-left: auto;\n\n  color: #0c0000;\n  opacity: 0.6;\n\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const Text = styled.div`\n  margin-bottom: 40px;\n\n  font-size: clamp(23px, 4vw, 30px);\n  font-weight: bold;\n`;\n\nexport const Btn = styled.button`\n  margin-top: 50px;\n\n  border: none;\n  border-radius: 12px;\n\n  width: 220px;\n  height: 60px;\n\n  color: #fffafa;\n  font-size: 25px;\n  font-weight: bold;\n\n  background-color: #f2a663;\n\n  cursor: pointer;\n\n  &.on {\n    background-color: #d99559;\n    color: #e6e1e1;\n  }\n`;\n","import React, { useState } from 'react';\nimport history from '../../utils/browserHistory';\nimport { sendCertcode, setNewPassword } from '../../container/sign';\n\nimport {\n  FindPage,\n  Title,\n  Box,\n  Text,\n  InputBox,\n  Input,\n  LinkBox,\n  LoginLink,\n  SignupLink,\n  Btn,\n} from './style';\n\nfunction Find() {\n  const [findField, setFindField] = useState({\n    email: '',\n    code: '',\n    password: '',\n    rPassword: '',\n  });\n  const [afterSendingCode, setAfterSendingCode] = useState(false);\n  const [afterSetNewPassword, setAfterSetNewPassword] = useState(false);\n\n  const { email, code, password, rPassword } = findField;\n\n  const changeState = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setFindField({\n      ...findField,\n      [name]: value,\n    });\n  };\n\n  const onClickSendCodeBtn = async function (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    const target = e.currentTarget;\n    target.disabled = true;\n    target.classList.add('on');\n\n    const res = await sendCertcode({ email });\n\n    target.disabled = false;\n    target.classList.remove('on');\n\n    if (res?.success === false) {\n      alert(res.msg);\n\n      setFindField({\n        email: '',\n        code: '',\n        password: '',\n        rPassword: '',\n      });\n      return;\n    }\n\n    setAfterSendingCode(true);\n  };\n\n  const onClickSetNewPasswordBtn = async function (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    const target = e.currentTarget;\n    target.disabled = true;\n    target.classList.add('on');\n\n    if (password !== rPassword) {\n      alert('비밀번호 두 개가 다릅니다.');\n      target.disabled = false;\n      target.classList.remove('on');\n      return;\n    }\n\n    const res = await setNewPassword({ code, password });\n\n    setFindField({\n      email: '',\n      code: '',\n      password: '',\n      rPassword: '',\n    });\n    target.disabled = false;\n    target.classList.remove('on');\n\n    if (res?.success === false) {\n      alert(res.msg);\n      return;\n    }\n\n    setAfterSetNewPassword(true);\n  };\n\n  return (\n    <FindPage>\n      <Title>%</Title>\n\n      <Box>\n        {afterSetNewPassword ? (\n          <>\n            <Text>비밀번호가 변경되었습니다.</Text>\n            <Btn type=\"button\" onClick={() => history.push('/login')}>\n              로그인 화면으로\n            </Btn>\n          </>\n        ) : (\n          <>\n            {afterSendingCode ? (\n              <>\n                <InputBox>\n                  <Input\n                    autoComplete=\"off\"\n                    name=\"code\"\n                    placeholder=\"인증 코드\"\n                    value={code}\n                    onChange={changeState}\n                  />\n                  <Input\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={changeState}\n                  />\n                  <Input\n                    name=\"rPassword\"\n                    placeholder=\"Reenter password\"\n                    type=\"password\"\n                    value={rPassword}\n                    onChange={changeState}\n                  />\n                </InputBox>\n\n                <Btn type=\"button\" onClick={onClickSetNewPasswordBtn}>\n                  비밀번호 재설정\n                </Btn>\n              </>\n            ) : (\n              <>\n                <InputBox>\n                  <Input\n                    name=\"email\"\n                    placeholder=\"E-mail\"\n                    value={email}\n                    onChange={changeState}\n                  />\n                </InputBox>\n                <LinkBox>\n                  <LoginLink onClick={() => history.push('/login')}>\n                    로그인\n                  </LoginLink>\n                  <SignupLink onClick={() => history.push('/signup')}>\n                    회원가입\n                  </SignupLink>\n                </LinkBox>\n\n                <Btn type=\"button\" onClick={onClickSendCodeBtn}>\n                  인증코드 보내기\n                </Btn>\n              </>\n            )}\n          </>\n        )}\n      </Box>\n    </FindPage>\n  );\n}\n\nexport default Find;\n","import styled from 'styled-components';\n\nexport const EmailVerificationPage = styled.div`\n  width: 100vw;\n  height: 100vh;\n\n  overflow: hidden;\n`;\n\nexport const ContentsBox = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100vw;\n  height: 100vh;\n\n  z-index: 1000;\n`;\n\nexport const Filter = styled.div<{ opacity: number }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: ${(props) => `rgba(0, 0, 0, ${props.opacity})`};\n\n  z-index: 100;\n`;\nexport const TypingEffectText = styled.h1`\n  font-size: clamp(32px, 6vw, 100px);\n\n  color: #ffffff;\n`;\n\nexport const SlothVideo = styled.video`\n  position: relative;\n  top: -18vh;\n\n  height: 136vh;\n  width: 100vw;\n\n  object-fit: cover;\n`;\n\nexport const Btn = styled.div`\n  color: #fff;\n  font-size: 20px;\n\n  height: 40px;\n\n  transition: all 0.2s;\n\n  cursor: pointer;\n\n  &:hover {\n    font-size: 22px;\n  }\n`;\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport history from '../../utils/browserHistory';\nimport {\n  EmailVerificationPage,\n  ContentsBox,\n  TypingEffectText,\n  Filter,\n  SlothVideo,\n  Btn,\n} from './style';\n\nimport { emailVerification } from '../../container/sign';\n\nconst texts = ['...인증', '..되었습니다..'];\n\ninterface typingEffectProps {\n  check: boolean;\n  callback: () => void;\n}\nconst TypingEffect = ({ check, callback }: typingEffectProps) => {\n  const time = useRef(0);\n  const ref = useRef({} as HTMLHeadingElement);\n  const handleRef = useRef({} as NodeJS.Timeout);\n\n  // console.log('TypingEffect : ', check);\n\n  useEffect(() => {\n    const between = '.';\n    const speed = 800;\n\n    clearTimeout(handleRef.current);\n\n    const typeWriter = () => {\n      // console.log(`time: ${time.current}, check: ${check}`);\n\n      let step = -1;\n      if (texts[0].length > time.current) step = 0;\n      else if (!check) step = 1;\n      else step = 2;\n\n      let char = '';\n      switch (step) {\n        case 0:\n          char = texts[0].charAt(time.current);\n          time.current += 1;\n          break;\n        case 1:\n          char = between;\n          break;\n        case 2:\n          char = texts[1].charAt(time.current - texts[0].length);\n          time.current += 1;\n          break;\n        default:\n      }\n\n      // console.log(`step: ${step}, char: ${char}`);\n\n      ref.current.innerHTML += char;\n      if (time.current <= texts[0].length + texts[1].length)\n        handleRef.current = setTimeout(typeWriter, speed);\n      else callback();\n    };\n    typeWriter();\n  }, [check, callback]);\n\n  return (\n    <TypingEffectText ref={ref}>{/* TypingEffect Text */}</TypingEffectText>\n  );\n};\n\nconst BackgroundGif = () => (\n  <SlothVideo loop autoPlay muted playsInline>\n    <source\n      src=\"https://thumbs.gfycat.com/AdventurousPointlessGull-mobile.webm\"\n      type=\"video/webm\"\n    />\n    <source\n      src=\"https://thumbs.gfycat.com/AdventurousPointlessGull-mobile.mp4\"\n      type=\"video/mp4\"\n    />\n  </SlothVideo>\n);\n\nconst EmailVerification = () => {\n  const [btnVisible, setBtnVisible] = useState(false);\n  const [afterVerification, setAfterVerification] = useState(false);\n  const { code } = useParams<{ code: string }>();\n\n  const init = useMemo(\n    () =>\n      async function () {\n        const res = await emailVerification(code);\n        if (res?.success) {\n          setAfterVerification(true);\n        } else {\n          texts[1] = '에..실패..했습니다..';\n          setAfterVerification(true);\n        }\n      },\n    [code],\n  );\n\n  useEffect(() => {\n    init();\n  }, [init]);\n\n  return (\n    <>\n      <EmailVerificationPage>\n        <ContentsBox>\n          <TypingEffect\n            check={afterVerification}\n            callback={() => {\n              setBtnVisible(true);\n            }}\n          />\n          {btnVisible ? (\n            <Btn onClick={() => history.replace('/')}>로그인하러 가기</Btn>\n          ) : (\n            <></>\n          )}\n        </ContentsBox>\n\n        <BackgroundGif />\n\n        <Filter opacity={btnVisible ? 0.8 : 0.7} />\n      </EmailVerificationPage>\n    </>\n  );\n};\n\nexport default EmailVerification;\n","import styled from 'styled-components';\n\nimport Page from '../pageStyle';\n\nexport const PostPage = styled.div`\n  ${Page}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  background-color: #f7c46a;\n`;\n\nexport const PostImage = styled.div<{ url?: string }>`\n  position: relative;\n\n  width: 100%;\n  height: 200px;\n\n  cursor: pointer;\n\n  ${(props) =>\n    props.url\n      ? `background-image: url(${props.url}); background-size: cover;`\n      : `background-color: #FFBB6B;`}\n`;\n","import React, { useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { postType } from '../../container/post';\n\nimport { PostPage, PostImage } from './style';\n\n// { propsPost }: { propsPost?: postType }\nfunction Post({\n  location,\n}: RouteComponentProps<{}, any, { propsPost: postType }>) {\n  const propsPost = location.state?.propsPost;\n\n  // console.log('propsPost', propsPost);\n  const [post] = useState(propsPost);\n\n  useEffect(() => {\n    // console.log('useEffect');\n    // if (!post) {\n    //   // setPost()\n    //   alert('가져오기');\n    //   setPost();\n    // }\n  }, [post]);\n\n  // console.log('post', post);\n\n  return (\n    <PostPage>\n      {post ? (\n        <>\n          <PostImage />\n          <div>\n            <div>{post.title}</div>\n            <div>{post.price}</div>\n            <div>{post.content}</div>\n            <div>{post.chatUrl}</div>\n            {/* <div>{post.nanumPrice}</div> */}\n            <div>{post.user.name}</div>\n            <div>\n              {post.minParti} ~ {post.maxParti}명\n            </div>\n            <div>{post.createdAt}</div>\n          </div>\n        </>\n      ) : (\n        <div>스켈레톤 제작 예정..</div>\n      )}\n    </PostPage>\n  );\n}\nPost.defaultProps = { propsPost: undefined };\n\nexport default Post;\n","import callApi from '../../utils/api';\n\nexport type postType = {\n  chatUrl: string;\n  content: string;\n  createdAt: Date;\n  maxParti: number;\n  minParti: number;\n  nanumPrice: number;\n  post_id: number;\n  price: number;\n  title: string;\n  user: {\n    name: string;\n    uid: string;\n  };\n};\n\n// getPosts\nexport type getPostsRes = {\n  data: {\n    next: string;\n    page: number;\n    posts: postType[];\n    previous: string;\n    size: number;\n  };\n};\nexport const getPosts = async function (page: number) {\n  const res = await callApi.get<{}, getPostsRes>(`posts?page=${page}`);\n  return res;\n};\n","import styled from 'styled-components';\n\nimport Page from '../pageStyle';\n\nexport const MainPage = styled.div`\n  ${Page}\n  overflow: auto;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  background-color: #f7c46a;\n`;\n\nexport const Title = styled.div`\n  color: #f9765a;\n\n  opacity: 0.5;\n  font-size: 30px;\n`;\n\nexport const Text = styled.div`\n  color: #f9765a;\n\n  opacity: 0.5;\n  font-size: 200px;\n  font-weight: bold;\n`;\n\nexport const PostUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  margin: 0px;\n  padding: 0px;\n\n  height: 50vh;\n  width: 100%;\n\n  list-style: none;\n\n  &.col-4 {\n    & > li {\n      width: 25%;\n    }\n  }\n  &.col-2 {\n    & > li {\n      width: 50%;\n    }\n  }\n  &.col-1 {\n    & > li {\n      width: 100%;\n    }\n  }\n`;\n\nexport const PostLi = styled.li`\n  position: relative;\n\n  padding: 0px 0px 35px 35px;\n  margin: 0px;\n\n  box-sizing: border-box;\n`;\n\nexport const PostBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: stretch;\n  align-content: stretch;\n\n  background-color: #ffca6e;\n`;\n\nexport const PostImage = styled.div<{ url?: string }>`\n  position: relative;\n\n  width: 100%;\n  height: 200px;\n\n  cursor: pointer;\n\n  ${(props) =>\n    props.url\n      ? `background-image: url(${props.url}); background-size: cover;`\n      : `background-color: #FFBB6B;`}\n`;\n\nexport const PostInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: stretch;\n  align-content: stretch;\n`;\n\nexport const PostTitle = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n`;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport history from '../../utils/browserHistory';\n\nimport { postType, getPosts, getPostsRes } from '../../container/post';\n\nimport {\n  MainPage,\n  Title,\n  PostUl,\n  PostLi,\n  PostBox,\n  PostTitle,\n  PostInfo,\n  PostImage,\n} from './style';\n\nfunction Main() {\n  const [posts, setPosts] = useState<postType[]>([]);\n  const [currentPageInfo, setCurrentPageInfo] = useState<getPostsRes>();\n\n  const nextPage = useCallback(async () => {\n    if (!currentPageInfo?.data.next) {\n      // alert('[nextPage] next가 null 임!');\n      return;\n    }\n\n    const res = await getPosts(currentPageInfo.data.page + 1);\n    if (res?.success) {\n      const alreadyImportedPosts_id = currentPageInfo.data.posts.map(\n        (post) => post.post_id,\n      );\n      const newPosts = res.data.posts.filter(\n        (post) => !alreadyImportedPosts_id.includes(post.post_id),\n      );\n\n      setPosts([...posts, ...newPosts]);\n      setCurrentPageInfo({ data: res.data });\n    }\n    //  else {\n    //   alert('[nextPage] 뭔지 모르겠는데 오류!');\n    // }\n  }, [currentPageInfo, posts]);\n\n  useEffect(() => {\n    async function init() {\n      const res = await getPosts(1);\n      if (res?.success) {\n        setPosts(res.data.posts);\n        setCurrentPageInfo({ data: res.data });\n      }\n      //  else {\n      //   alert('[init] 뭔지 모르겠는데 오류!');\n      // }\n    }\n    init();\n  }, []);\n\n  return (\n    <MainPage\n      onScroll={(e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n        const { offsetHeight, scrollHeight, scrollTop } = e.currentTarget;\n        if (offsetHeight + scrollTop >= scrollHeight) {\n          nextPage();\n        }\n      }}\n    >\n      <Title>%</Title>\n      <PostUl className=\"col-4\">\n        {posts.map((post) => (\n          <PostLi key={post.post_id}>\n            <PostBox>\n              <PostImage\n                onClick={() => {\n                  history.push({\n                    pathname: `/post/${post.post_id}`,\n                    state: { propsPost: post },\n                  });\n                }}\n              />\n              <PostInfo>\n                <PostTitle>{post.title}</PostTitle>\n                <div>{post.price}</div>\n                <div>{post.content}</div>\n                <div>{post.chatUrl}</div>\n                {/* <div>{post.nanumPrice}</div> */}\n                <div>{post.user.name}</div>\n                <div>\n                  {post.minParti} ~ {post.maxParti}명\n                </div>\n                <div>{post.createdAt}</div>\n              </PostInfo>\n            </PostBox>\n          </PostLi>\n        ))}\n      </PostUl>\n    </MainPage>\n  );\n}\n\nexport default Main;\n","import styled from 'styled-components';\n\nimport Page from '../pageStyle';\n\nexport const EnptyPage = styled.div`\n  ${Page}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  background-color: #f7c46a;\n`;\n\nexport const ErrorCodeText = styled.div`\n  color: #f9765a;\n\n  opacity: 0.5;\n  font-size: 30px;\n`;\n\nexport const HmmText = styled.div`\n  color: #f9765a;\n\n  opacity: 0.5;\n  font-size: 300px;\n  font-weight: bold;\n`;\n","import React from 'react';\n\nimport { EnptyPage, ErrorCodeText, HmmText } from './style';\n\nfunction Empty() {\n  return (\n    <EnptyPage>\n      <ErrorCodeText>404</ErrorCodeText>\n      <HmmText>Hmm...</HmmText>\n    </EnptyPage>\n  );\n}\n\nexport default Empty;\n","import React from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\n\nimport callCookie from '../../utils/cookie';\nimport history from '../../utils/browserHistory';\nimport AuthRoute from './AuthRoute';\n\n// Route\nimport Signup from '../../pages/Signup';\nimport Login from '../../pages/Login';\nimport Find from '../../pages/Find';\nimport EmailVerification from '../../pages/EmailVerification';\nimport Post from '../../pages/Post';\n\n// AuthRoute\nimport Main from '../../pages/Main';\n\n// default\nimport Empty from '../../pages/Enpty';\n\nconst Routes = () => (\n  <Router history={history}>\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        render={() => {\n          const staySignedIn = callCookie.get('staySignedIn');\n          if (staySignedIn) {\n            callCookie.set('jwt', staySignedIn, 2);\n            return <Main />;\n          }\n\n          return <Login />;\n        }}\n      />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <Route\n        exact\n        path=\"/emailVerification/:code\"\n        component={EmailVerification}\n      />\n      <Route exact path=\"/post/:post_id\" component={Post} />\n\n      <Route exact path=\"/find\" component={Find} />\n\n      <AuthRoute exact path=\"/main\" component={Main} />\n      {/* <Route exact path=\"/main\" component={Main} /> */}\n\n      <Route component={Empty} />\n    </Switch>\n  </Router>\n);\n\nexport default Routes;\n","import React from 'react';\n\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n    </>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}